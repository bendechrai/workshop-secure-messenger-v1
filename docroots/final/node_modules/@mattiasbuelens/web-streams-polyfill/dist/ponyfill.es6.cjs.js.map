{"version":3,"file":"ponyfill.es6.cjs.js","sources":["../src/stub/number-isinteger.js","../src/stub/symbol.js","../src/utils.js","../src/stub/number-isnan.js","../spec/reference-implementation/lib/helpers.js","../src/stub/assert.js","../spec/reference-implementation/lib/utils.js","../spec/reference-implementation/lib/queue-with-sizes.js","../spec/reference-implementation/lib/writable-stream.js","../spec/reference-implementation/lib/readable-stream.js","../spec/reference-implementation/lib/byte-length-queuing-strategy.js","../spec/reference-implementation/lib/count-queuing-strategy.js","../spec/reference-implementation/lib/transform-stream.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\nconst NumberIsInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nexport default NumberIsInteger;\n","const FakeSymbol = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n  Symbol :\n  description => `Symbol(${description})`;\n\nexport default FakeSymbol;\n","export function noop() {\n  // do nothing\n}\n\nfunction getGlobals() {\n  /* global self, window, global */\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\nconst isFakeDetached = Symbol('is \"detached\" for our purposes');\r\n\r\nfunction IsPropertyKey(argument) {\r\n  return typeof argument === 'string' || typeof argument === 'symbol';\r\n}\r\n\r\nexports.typeIsObject = x => (typeof x === 'object' && x !== null) || typeof x === 'function';\r\n\r\nexports.createDataProperty = (o, p, v) => {\r\n  assert(exports.typeIsObject(o));\r\n  Object.defineProperty(o, p, { value: v, writable: true, enumerable: true, configurable: true });\r\n};\r\n\r\nexports.createArrayFromList = elements => {\r\n  // We use arrays to represent lists, so this is basically a no-op.\r\n  // Do a slice though just in case we happen to depend on the unique-ness.\r\n  return elements.slice();\r\n};\r\n\r\nexports.ArrayBufferCopy = (dest, destOffset, src, srcOffset, n) => {\r\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\r\n};\r\n\r\nexports.CreateIterResultObject = (value, done) => {\r\n  assert(typeof done === 'boolean');\r\n  const obj = {};\r\n  Object.defineProperty(obj, 'value', { value, enumerable: true, writable: true, configurable: true });\r\n  Object.defineProperty(obj, 'done', { value: done, enumerable: true, writable: true, configurable: true });\r\n  return obj;\r\n};\r\n\r\nexports.IsFiniteNonNegativeNumber = v => {\r\n  if (exports.IsNonNegativeNumber(v) === false) {\r\n    return false;\r\n  }\r\n\r\n  if (v === Infinity) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexports.IsNonNegativeNumber = v => {\r\n  if (typeof v !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  if (Number.isNaN(v)) {\r\n    return false;\r\n  }\r\n\r\n  if (v < 0) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction Call(F, V, args) {\r\n  if (typeof F !== 'function') {\r\n    throw new TypeError('Argument is not a function');\r\n  }\r\n\r\n  return Function.prototype.apply.call(F, V, args);\r\n}\r\n\r\nexports.Call = Call;\r\n\r\nexports.CreateAlgorithmFromUnderlyingMethod = (underlyingObject, methodName, algoArgCount, extraArgs) => {\r\n  assert(underlyingObject !== undefined);\r\n  assert(IsPropertyKey(methodName));\r\n  assert(algoArgCount === 0 || algoArgCount === 1);\r\n  assert(Array.isArray(extraArgs));\r\n  const method = underlyingObject[methodName];\r\n  if (method !== undefined) {\r\n    if (typeof method !== 'function') {\r\n      throw new TypeError(`${method} is not a method`);\r\n    }\r\n    switch (algoArgCount) {\r\n      case 0: {\r\n        return () => {\r\n          return PromiseCall(method, underlyingObject, extraArgs);\r\n        };\r\n      }\r\n\r\n      case 1: {\r\n        return arg => {\r\n          const fullArgs = [arg].concat(extraArgs);\r\n          return PromiseCall(method, underlyingObject, fullArgs);\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return () => Promise.resolve();\r\n};\r\n\r\nexports.InvokeOrNoop = (O, P, args) => {\r\n  assert(O !== undefined);\r\n  assert(IsPropertyKey(P));\r\n  assert(Array.isArray(args));\r\n\r\n  const method = O[P];\r\n  if (method === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  return Call(method, O, args);\r\n};\r\n\r\nfunction PromiseCall(F, V, args) {\r\n  assert(typeof F === 'function');\r\n  assert(V !== undefined);\r\n  assert(Array.isArray(args));\r\n  try {\r\n    return Promise.resolve(Call(F, V, args));\r\n  } catch (value) {\r\n    return Promise.reject(value);\r\n  }\r\n}\r\n\r\nexports.PromiseCall = PromiseCall;\r\n\r\n// Not implemented correctly\r\nexports.TransferArrayBuffer = O => {\r\n  assert(!exports.IsDetachedBuffer(O));\r\n  const transferredIshVersion = O.slice();\r\n\r\n  // This is specifically to fool tests that test \"is transferred\" by taking a non-zero-length\r\n  // ArrayBuffer and checking if its byteLength starts returning 0.\r\n  Object.defineProperty(O, 'byteLength', {\r\n    get() {\r\n      return 0;\r\n    }\r\n  });\r\n  O[isFakeDetached] = true;\r\n\r\n  return transferredIshVersion;\r\n};\r\n\r\n// Not implemented correctly\r\nexports.IsDetachedBuffer = O => {\r\n  return isFakeDetached in O;\r\n};\r\n\r\nexports.ValidateAndNormalizeHighWaterMark = highWaterMark => {\r\n  highWaterMark = Number(highWaterMark);\r\n  if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\r\n    throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\r\n  }\r\n\r\n  return highWaterMark;\r\n};\r\n\r\nexports.MakeSizeAlgorithmFromSizeFunction = size => {\r\n  if (size === undefined) {\r\n    return () => 1;\r\n  }\r\n  if (typeof size !== 'function') {\r\n    throw new TypeError('size property of a queuing strategy must be a function');\r\n  }\r\n  return chunk => size(chunk);\r\n};\r\n","import { noop } from '../utils';\n\nexport default function assert() {\n  // do nothing\n}\n\nassert.AssertionError = noop;\n","'use strict';\r\nconst assert = require('assert');\r\n\r\nexports.rethrowAssertionErrorRejection = e => {\r\n  // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\r\n  // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\r\n  // expect any errors, but assertion errors are always problematic.\r\n  if (e && e instanceof assert.AssertionError) {\r\n    setTimeout(() => {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n};\r\n","'use strict';\r\nconst assert = require('better-assert');\r\nconst { IsFiniteNonNegativeNumber } = require('./helpers.js');\r\n\r\nexports.DequeueValue = container => {\r\n  assert('_queue' in container && '_queueTotalSize' in container);\r\n  assert(container._queue.length > 0);\r\n\r\n  const pair = container._queue.shift();\r\n  container._queueTotalSize -= pair.size;\r\n  if (container._queueTotalSize < 0) {\r\n    container._queueTotalSize = 0;\r\n  }\r\n\r\n  return pair.value;\r\n};\r\n\r\nexports.EnqueueValueWithSize = (container, value, size) => {\r\n  assert('_queue' in container && '_queueTotalSize' in container);\r\n\r\n  size = Number(size);\r\n  if (!IsFiniteNonNegativeNumber(size)) {\r\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\r\n  }\r\n\r\n  container._queue.push({ value, size });\r\n  container._queueTotalSize += size;\r\n};\r\n\r\nexports.PeekQueueValue = container => {\r\n  assert('_queue' in container && '_queueTotalSize' in container);\r\n  assert(container._queue.length > 0);\r\n\r\n  const pair = container._queue[0];\r\n  return pair.value;\r\n};\r\n\r\nexports.ResetQueue = container => {\r\n  assert('_queue' in container && '_queueTotalSize' in container);\r\n\r\n  container._queue = [];\r\n  container._queueTotalSize = 0;\r\n};\r\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\r\n// and do not appear in the standard text.\r\nconst verbose = require('debug')('streams:writable-stream:verbose');\r\n\r\nconst { CreateAlgorithmFromUnderlyingMethod, InvokeOrNoop, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\r\n        MakeSizeAlgorithmFromSizeFunction, typeIsObject } = require('./helpers.js');\r\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\r\nconst { DequeueValue, EnqueueValueWithSize, PeekQueueValue, ResetQueue } = require('./queue-with-sizes.js');\r\n\r\nconst AbortSteps = Symbol('[[AbortSteps]]');\r\nconst ErrorSteps = Symbol('[[ErrorSteps]]');\r\n\r\nclass WritableStream {\r\n  constructor(underlyingSink = {}, { size, highWaterMark = 1 } = {}) {\r\n    InitializeWritableStream(this);\r\n\r\n    const type = underlyingSink.type;\r\n\r\n    if (type !== undefined) {\r\n      throw new RangeError('Invalid type is specified');\r\n    }\r\n\r\n    const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\r\n    highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\r\n\r\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\r\n  }\r\n\r\n  get locked() {\r\n    if (IsWritableStream(this) === false) {\r\n      throw streamBrandCheckException('locked');\r\n    }\r\n\r\n    return IsWritableStreamLocked(this);\r\n  }\r\n\r\n  abort(reason) {\r\n    if (IsWritableStream(this) === false) {\r\n      return Promise.reject(streamBrandCheckException('abort'));\r\n    }\r\n\r\n    if (IsWritableStreamLocked(this) === true) {\r\n      return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\r\n    }\r\n\r\n    return WritableStreamAbort(this, reason);\r\n  }\r\n\r\n  getWriter() {\r\n    if (IsWritableStream(this) === false) {\r\n      throw streamBrandCheckException('getWriter');\r\n    }\r\n\r\n    return AcquireWritableStreamDefaultWriter(this);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  AcquireWritableStreamDefaultWriter,\r\n  CreateWritableStream,\r\n  IsWritableStream,\r\n  IsWritableStreamLocked,\r\n  WritableStream,\r\n  WritableStreamAbort,\r\n  WritableStreamDefaultControllerErrorIfNeeded,\r\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\r\n  WritableStreamDefaultWriterRelease,\r\n  WritableStreamDefaultWriterWrite,\r\n  WritableStreamCloseQueuedOrInFlight\r\n};\r\n\r\n// Abstract operations for the WritableStream.\r\n\r\nfunction AcquireWritableStreamDefaultWriter(stream) {\r\n  return new WritableStreamDefaultWriter(stream);\r\n}\r\n\r\n// Throws if and only if startAlgorithm throws.\r\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1,\r\n                              sizeAlgorithm = () => 1) {\r\n  assert(IsNonNegativeNumber(highWaterMark) === true);\r\n\r\n  const stream = Object.create(WritableStream.prototype);\r\n  InitializeWritableStream(stream);\r\n\r\n  const controller = Object.create(WritableStreamDefaultController.prototype);\r\n\r\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\r\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\r\n  return stream;\r\n}\r\n\r\nfunction InitializeWritableStream(stream) {\r\n  stream._state = 'writable';\r\n\r\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\r\n  // 'erroring' or 'errored'. May be set to an undefined value.\r\n  stream._storedError = undefined;\r\n\r\n  stream._writer = undefined;\r\n\r\n  // Initialize to undefined first because the constructor of the controller checks this\r\n  // variable to validate the caller.\r\n  stream._writableStreamController = undefined;\r\n\r\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\r\n  // producer without waiting for the queued writes to finish.\r\n  stream._writeRequests = [];\r\n\r\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\r\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\r\n  stream._inFlightWriteRequest = undefined;\r\n\r\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\r\n  // has been detached.\r\n  stream._closeRequest = undefined;\r\n\r\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\r\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\r\n  stream._inFlightCloseRequest = undefined;\r\n\r\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\r\n  stream._pendingAbortRequest = undefined;\r\n\r\n  // The backpressure signal set by the controller.\r\n  stream._backpressure = false;\r\n}\r\n\r\nfunction IsWritableStream(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction IsWritableStreamLocked(stream) {\r\n  assert(IsWritableStream(stream) === true);\r\n\r\n  if (stream._writer === undefined) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction WritableStreamAbort(stream, reason) {\r\n  const state = stream._state;\r\n  if (state === 'closed' || state === 'errored') {\r\n    return Promise.resolve(undefined);\r\n  }\r\n  if (stream._pendingAbortRequest !== undefined) {\r\n    return stream._pendingAbortRequest._promise;\r\n  }\r\n\r\n  assert(state === 'writable' || state === 'erroring');\r\n\r\n  let wasAlreadyErroring = false;\r\n  if (state === 'erroring') {\r\n    wasAlreadyErroring = true;\r\n    // reason will not be used, so don't keep a reference to it.\r\n    reason = undefined;\r\n  }\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    stream._pendingAbortRequest = {\r\n      _resolve: resolve,\r\n      _reject: reject,\r\n      _reason: reason,\r\n      _wasAlreadyErroring: wasAlreadyErroring\r\n    };\r\n  });\r\n  stream._pendingAbortRequest._promise = promise;\r\n\r\n  if (wasAlreadyErroring === false) {\r\n    WritableStreamStartErroring(stream, reason);\r\n  }\r\n\r\n  return promise;\r\n}\r\n\r\n// WritableStream API exposed for controllers.\r\n\r\nfunction WritableStreamAddWriteRequest(stream) {\r\n  assert(IsWritableStreamLocked(stream) === true);\r\n  assert(stream._state === 'writable');\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    const writeRequest = {\r\n      _resolve: resolve,\r\n      _reject: reject\r\n    };\r\n\r\n    stream._writeRequests.push(writeRequest);\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nfunction WritableStreamDealWithRejection(stream, error) {\r\n  verbose('WritableStreamDealWithRejection(stream, %o)', error);\r\n  const state = stream._state;\r\n\r\n  if (state === 'writable') {\r\n    WritableStreamStartErroring(stream, error);\r\n    return;\r\n  }\r\n\r\n  assert(state === 'erroring');\r\n  WritableStreamFinishErroring(stream);\r\n}\r\n\r\nfunction WritableStreamStartErroring(stream, reason) {\r\n  verbose('WritableStreamStartErroring(stream, %o)', reason);\r\n  assert(stream._storedError === undefined);\r\n  assert(stream._state === 'writable');\r\n\r\n  const controller = stream._writableStreamController;\r\n  assert(controller !== undefined);\r\n\r\n  stream._state = 'erroring';\r\n  stream._storedError = reason;\r\n  const writer = stream._writer;\r\n  if (writer !== undefined) {\r\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\r\n  }\r\n\r\n  if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\r\n    WritableStreamFinishErroring(stream);\r\n  }\r\n}\r\n\r\nfunction WritableStreamFinishErroring(stream) {\r\n  verbose('WritableStreamFinishErroring()');\r\n  assert(stream._state === 'erroring');\r\n  assert(WritableStreamHasOperationMarkedInFlight(stream) === false);\r\n  stream._state = 'errored';\r\n  stream._writableStreamController[ErrorSteps]();\r\n\r\n  const storedError = stream._storedError;\r\n  for (const writeRequest of stream._writeRequests) {\r\n    writeRequest._reject(storedError);\r\n  }\r\n  stream._writeRequests = [];\r\n\r\n  if (stream._pendingAbortRequest === undefined) {\r\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\r\n    return;\r\n  }\r\n\r\n  const abortRequest = stream._pendingAbortRequest;\r\n  stream._pendingAbortRequest = undefined;\r\n\r\n  if (abortRequest._wasAlreadyErroring === true) {\r\n    abortRequest._reject(storedError);\r\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\r\n    return;\r\n  }\r\n\r\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\r\n  promise.then(\r\n      () => {\r\n        abortRequest._resolve();\r\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\r\n      },\r\n      reason => {\r\n        abortRequest._reject(reason);\r\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\r\n      });\r\n}\r\n\r\nfunction WritableStreamFinishInFlightWrite(stream) {\r\n  assert(stream._inFlightWriteRequest !== undefined);\r\n  stream._inFlightWriteRequest._resolve(undefined);\r\n  stream._inFlightWriteRequest = undefined;\r\n}\r\n\r\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\r\n  assert(stream._inFlightWriteRequest !== undefined);\r\n  stream._inFlightWriteRequest._reject(error);\r\n  stream._inFlightWriteRequest = undefined;\r\n\r\n  assert(stream._state === 'writable' || stream._state === 'erroring');\r\n\r\n  WritableStreamDealWithRejection(stream, error);\r\n}\r\n\r\nfunction WritableStreamFinishInFlightClose(stream) {\r\n  assert(stream._inFlightCloseRequest !== undefined);\r\n  stream._inFlightCloseRequest._resolve(undefined);\r\n  stream._inFlightCloseRequest = undefined;\r\n\r\n  const state = stream._state;\r\n\r\n  assert(state === 'writable' || state === 'erroring');\r\n\r\n  if (state === 'erroring') {\r\n    // The error was too late to do anything, so it is ignored.\r\n    stream._storedError = undefined;\r\n    if (stream._pendingAbortRequest !== undefined) {\r\n      stream._pendingAbortRequest._resolve();\r\n      stream._pendingAbortRequest = undefined;\r\n    }\r\n  }\r\n\r\n  stream._state = 'closed';\r\n\r\n  const writer = stream._writer;\r\n  if (writer !== undefined) {\r\n    defaultWriterClosedPromiseResolve(writer);\r\n  }\r\n\r\n  assert(stream._pendingAbortRequest === undefined);\r\n  assert(stream._storedError === undefined);\r\n}\r\n\r\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\r\n  assert(stream._inFlightCloseRequest !== undefined);\r\n  stream._inFlightCloseRequest._reject(error);\r\n  stream._inFlightCloseRequest = undefined;\r\n\r\n  assert(stream._state === 'writable' || stream._state === 'erroring');\r\n\r\n  // Never execute sink abort() after sink close().\r\n  if (stream._pendingAbortRequest !== undefined) {\r\n    stream._pendingAbortRequest._reject(error);\r\n    stream._pendingAbortRequest = undefined;\r\n  }\r\n  WritableStreamDealWithRejection(stream, error);\r\n}\r\n\r\n// TODO(ricea): Fix alphabetical order.\r\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\r\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\r\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\r\n    verbose('WritableStreamHasOperationMarkedInFlight() is false');\r\n    return false;\r\n  }\r\n\r\n  verbose('WritableStreamHasOperationMarkedInFlight() is true');\r\n  return true;\r\n}\r\n\r\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\r\n  assert(stream._inFlightCloseRequest === undefined);\r\n  assert(stream._closeRequest !== undefined);\r\n  stream._inFlightCloseRequest = stream._closeRequest;\r\n  stream._closeRequest = undefined;\r\n}\r\n\r\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\r\n  assert(stream._inFlightWriteRequest === undefined);\r\n  assert(stream._writeRequests.length !== 0);\r\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\r\n}\r\n\r\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\r\n  verbose('WritableStreamRejectCloseAndClosedPromiseIfNeeded()');\r\n  assert(stream._state === 'errored');\r\n  if (stream._closeRequest !== undefined) {\r\n    assert(stream._inFlightCloseRequest === undefined);\r\n\r\n    stream._closeRequest._reject(stream._storedError);\r\n    stream._closeRequest = undefined;\r\n  }\r\n  const writer = stream._writer;\r\n  if (writer !== undefined) {\r\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\r\n    writer._closedPromise.catch(() => {});\r\n  }\r\n}\r\n\r\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\r\n  assert(stream._state === 'writable');\r\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\r\n\r\n  const writer = stream._writer;\r\n  if (writer !== undefined && backpressure !== stream._backpressure) {\r\n    if (backpressure === true) {\r\n      defaultWriterReadyPromiseReset(writer);\r\n    } else {\r\n      assert(backpressure === false);\r\n\r\n      defaultWriterReadyPromiseResolve(writer);\r\n    }\r\n  }\r\n\r\n  stream._backpressure = backpressure;\r\n}\r\n\r\nclass WritableStreamDefaultWriter {\r\n  constructor(stream) {\r\n    if (IsWritableStream(stream) === false) {\r\n      throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\r\n    }\r\n    if (IsWritableStreamLocked(stream) === true) {\r\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\r\n    }\r\n\r\n    this._ownerWritableStream = stream;\r\n    stream._writer = this;\r\n\r\n    const state = stream._state;\r\n\r\n    if (state === 'writable') {\r\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\r\n        defaultWriterReadyPromiseInitialize(this);\r\n      } else {\r\n        defaultWriterReadyPromiseInitializeAsResolved(this);\r\n      }\r\n\r\n      defaultWriterClosedPromiseInitialize(this);\r\n    } else if (state === 'erroring') {\r\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\r\n      this._readyPromise.catch(() => {});\r\n      defaultWriterClosedPromiseInitialize(this);\r\n    } else if (state === 'closed') {\r\n      defaultWriterReadyPromiseInitializeAsResolved(this);\r\n      defaultWriterClosedPromiseInitializeAsResolved(this);\r\n    } else {\r\n      assert(state === 'errored');\r\n\r\n      const storedError = stream._storedError;\r\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\r\n      this._readyPromise.catch(() => {});\r\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\r\n      this._closedPromise.catch(() => {});\r\n    }\r\n  }\r\n\r\n  get closed() {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      return Promise.reject(defaultWriterBrandCheckException('closed'));\r\n    }\r\n\r\n    return this._closedPromise;\r\n  }\r\n\r\n  get desiredSize() {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      throw defaultWriterBrandCheckException('desiredSize');\r\n    }\r\n\r\n    if (this._ownerWritableStream === undefined) {\r\n      throw defaultWriterLockException('desiredSize');\r\n    }\r\n\r\n    return WritableStreamDefaultWriterGetDesiredSize(this);\r\n  }\r\n\r\n  get ready() {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      return Promise.reject(defaultWriterBrandCheckException('ready'));\r\n    }\r\n\r\n    return this._readyPromise;\r\n  }\r\n\r\n  abort(reason) {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      return Promise.reject(defaultWriterBrandCheckException('abort'));\r\n    }\r\n\r\n    if (this._ownerWritableStream === undefined) {\r\n      return Promise.reject(defaultWriterLockException('abort'));\r\n    }\r\n\r\n    return WritableStreamDefaultWriterAbort(this, reason);\r\n  }\r\n\r\n  close() {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      return Promise.reject(defaultWriterBrandCheckException('close'));\r\n    }\r\n\r\n    const stream = this._ownerWritableStream;\r\n\r\n    if (stream === undefined) {\r\n      return Promise.reject(defaultWriterLockException('close'));\r\n    }\r\n\r\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\r\n      return Promise.reject(new TypeError('cannot close an already-closing stream'));\r\n    }\r\n\r\n    return WritableStreamDefaultWriterClose(this);\r\n  }\r\n\r\n  releaseLock() {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      throw defaultWriterBrandCheckException('releaseLock');\r\n    }\r\n\r\n    const stream = this._ownerWritableStream;\r\n\r\n    if (stream === undefined) {\r\n      return;\r\n    }\r\n\r\n    assert(stream._writer !== undefined);\r\n\r\n    WritableStreamDefaultWriterRelease(this);\r\n  }\r\n\r\n  write(chunk) {\r\n    if (IsWritableStreamDefaultWriter(this) === false) {\r\n      return Promise.reject(defaultWriterBrandCheckException('write'));\r\n    }\r\n\r\n    if (this._ownerWritableStream === undefined) {\r\n      return Promise.reject(defaultWriterLockException('write to'));\r\n    }\r\n\r\n    return WritableStreamDefaultWriterWrite(this, chunk);\r\n  }\r\n}\r\n\r\n// Abstract operations for the WritableStreamDefaultWriter.\r\n\r\nfunction IsWritableStreamDefaultWriter(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\r\n\r\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\r\n  const stream = writer._ownerWritableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  return WritableStreamAbort(stream, reason);\r\n}\r\n\r\nfunction WritableStreamDefaultWriterClose(writer) {\r\n  const stream = writer._ownerWritableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  const state = stream._state;\r\n  if (state === 'closed' || state === 'errored') {\r\n    return Promise.reject(new TypeError(\r\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\r\n  }\r\n\r\n  assert(state === 'writable' || state === 'erroring');\r\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    const closeRequest = {\r\n      _resolve: resolve,\r\n      _reject: reject\r\n    };\r\n\r\n    stream._closeRequest = closeRequest;\r\n  });\r\n\r\n  if (stream._backpressure === true && state === 'writable') {\r\n    defaultWriterReadyPromiseResolve(writer);\r\n  }\r\n\r\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\r\n\r\n  return promise;\r\n}\r\n\r\n\r\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\r\n  const stream = writer._ownerWritableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  const state = stream._state;\r\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  if (state === 'errored') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n\r\n  assert(state === 'writable' || state === 'erroring');\r\n\r\n  return WritableStreamDefaultWriterClose(writer);\r\n}\r\n\r\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\r\n  if (writer._closedPromiseState === 'pending') {\r\n    defaultWriterClosedPromiseReject(writer, error);\r\n  } else {\r\n    defaultWriterClosedPromiseResetToRejected(writer, error);\r\n  }\r\n  writer._closedPromise.catch(() => {});\r\n}\r\n\r\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\r\n  verbose('WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, %o)', error);\r\n  if (writer._readyPromiseState === 'pending') {\r\n    defaultWriterReadyPromiseReject(writer, error);\r\n  } else {\r\n    defaultWriterReadyPromiseResetToRejected(writer, error);\r\n  }\r\n  writer._readyPromise.catch(() => {});\r\n}\r\n\r\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\r\n  const stream = writer._ownerWritableStream;\r\n  const state = stream._state;\r\n\r\n  if (state === 'errored' || state === 'erroring') {\r\n    return null;\r\n  }\r\n\r\n  if (state === 'closed') {\r\n    return 0;\r\n  }\r\n\r\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\r\n}\r\n\r\nfunction WritableStreamDefaultWriterRelease(writer) {\r\n  const stream = writer._ownerWritableStream;\r\n  assert(stream !== undefined);\r\n  assert(stream._writer === writer);\r\n\r\n  const releasedError = new TypeError(\r\n    'Writer was released and can no longer be used to monitor the stream\\'s closedness');\r\n\r\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\r\n\r\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\r\n  // rejected until afterwards. This means that simply testing state will not work.\r\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\r\n\r\n  stream._writer = undefined;\r\n  writer._ownerWritableStream = undefined;\r\n}\r\n\r\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\r\n  const stream = writer._ownerWritableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  const controller = stream._writableStreamController;\r\n\r\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\r\n\r\n  if (stream !== writer._ownerWritableStream) {\r\n    return Promise.reject(defaultWriterLockException('write to'));\r\n  }\r\n\r\n  const state = stream._state;\r\n  if (state === 'errored') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\r\n    return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\r\n  }\r\n  if (state === 'erroring') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n\r\n  assert(state === 'writable');\r\n\r\n  const promise = WritableStreamAddWriteRequest(stream);\r\n\r\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\r\n\r\n  return promise;\r\n}\r\n\r\nclass WritableStreamDefaultController {\r\n  constructor() {\r\n    throw new TypeError('WritableStreamDefaultController cannot be constructed explicitly');\r\n  }\r\n\r\n  error(e) {\r\n    if (IsWritableStreamDefaultController(this) === false) {\r\n      throw new TypeError(\r\n        'WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\r\n    }\r\n    const state = this._controlledWritableStream._state;\r\n    if (state !== 'writable') {\r\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\r\n      // just treat it as a no-op.\r\n      return;\r\n    }\r\n\r\n    WritableStreamDefaultControllerError(this, e);\r\n  }\r\n\r\n  [AbortSteps](reason) {\r\n    return this._abortAlgorithm(reason);\r\n  }\r\n\r\n  [ErrorSteps]() {\r\n    ResetQueue(this);\r\n  }\r\n}\r\n\r\n// Abstract operations implementing interface required by the WritableStream.\r\n\r\nfunction IsWritableStreamDefaultController(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\r\n                                              abortAlgorithm, highWaterMark, sizeAlgorithm) {\r\n  assert(IsWritableStream(stream) === true);\r\n  assert(stream._writableStreamController === undefined);\r\n\r\n  controller._controlledWritableStream = stream;\r\n  stream._writableStreamController = controller;\r\n\r\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\r\n  controller._queue = undefined;\r\n  controller._queueTotalSize = undefined;\r\n  ResetQueue(controller);\r\n\r\n  controller._started = false;\r\n\r\n  controller._strategySizeAlgorithm = sizeAlgorithm;\r\n  controller._strategyHWM = highWaterMark;\r\n\r\n  controller._writeAlgorithm = writeAlgorithm;\r\n  controller._closeAlgorithm = closeAlgorithm;\r\n  controller._abortAlgorithm = abortAlgorithm;\r\n\r\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\r\n  WritableStreamUpdateBackpressure(stream, backpressure);\r\n\r\n  const startResult = startAlgorithm();\r\n  const startPromise = Promise.resolve(startResult);\r\n  startPromise.then(\r\n      () => {\r\n        assert(stream._state === 'writable' || stream._state === 'erroring');\r\n        controller._started = true;\r\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\r\n      },\r\n      r => {\r\n        assert(stream._state === 'writable' || stream._state === 'erroring');\r\n        controller._started = true;\r\n        WritableStreamDealWithRejection(stream, r);\r\n      }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n}\r\n\r\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\r\n  assert(underlyingSink !== undefined);\r\n\r\n  const controller = Object.create(WritableStreamDefaultController.prototype);\r\n\r\n  function startAlgorithm() {\r\n    return InvokeOrNoop(underlyingSink, 'start', [controller]);\r\n  }\r\n\r\n  const writeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'write', 1, [controller]);\r\n  const closeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'close', 0, []);\r\n  const abortAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'abort', 1, []);\r\n\r\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\r\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\r\n}\r\n\r\nfunction WritableStreamDefaultControllerClose(controller) {\r\n  EnqueueValueWithSize(controller, 'close', 0);\r\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\r\n}\r\n\r\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\r\n  try {\r\n    return controller._strategySizeAlgorithm(chunk);\r\n  } catch (chunkSizeE) {\r\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\r\n    return 1;\r\n  }\r\n}\r\n\r\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\r\n  return controller._strategyHWM - controller._queueTotalSize;\r\n}\r\n\r\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\r\n  const writeRecord = { chunk };\r\n\r\n  try {\r\n    EnqueueValueWithSize(controller, writeRecord, chunkSize);\r\n  } catch (enqueueE) {\r\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\r\n    return;\r\n  }\r\n\r\n  const stream = controller._controlledWritableStream;\r\n  if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\r\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\r\n    WritableStreamUpdateBackpressure(stream, backpressure);\r\n  }\r\n\r\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\r\n}\r\n\r\n// Abstract operations for the WritableStreamDefaultController.\r\n\r\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\r\n  verbose('WritableStreamDefaultControllerAdvanceQueueIfNeeded()');\r\n  const stream = controller._controlledWritableStream;\r\n\r\n  if (controller._started === false) {\r\n    return;\r\n  }\r\n\r\n  if (stream._inFlightWriteRequest !== undefined) {\r\n    return;\r\n  }\r\n\r\n  const state = stream._state;\r\n  if (state === 'closed' || state === 'errored') {\r\n    return;\r\n  }\r\n  if (state === 'erroring') {\r\n    WritableStreamFinishErroring(stream);\r\n    return;\r\n  }\r\n\r\n  if (controller._queue.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const writeRecord = PeekQueueValue(controller);\r\n  if (writeRecord === 'close') {\r\n    WritableStreamDefaultControllerProcessClose(controller);\r\n  } else {\r\n    WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\r\n  }\r\n}\r\n\r\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\r\n  if (controller._controlledWritableStream._state === 'writable') {\r\n    WritableStreamDefaultControllerError(controller, error);\r\n  }\r\n}\r\n\r\nfunction WritableStreamDefaultControllerProcessClose(controller) {\r\n  const stream = controller._controlledWritableStream;\r\n\r\n  WritableStreamMarkCloseRequestInFlight(stream);\r\n\r\n  DequeueValue(controller);\r\n  assert(controller._queue.length === 0);\r\n\r\n  const sinkClosePromise = controller._closeAlgorithm();\r\n  sinkClosePromise.then(\r\n    () => {\r\n      WritableStreamFinishInFlightClose(stream);\r\n    },\r\n    reason => {\r\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\r\n    }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n}\r\n\r\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\r\n  const stream = controller._controlledWritableStream;\r\n\r\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\r\n\r\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\r\n  sinkWritePromise.then(\r\n    () => {\r\n      WritableStreamFinishInFlightWrite(stream);\r\n\r\n      const state = stream._state;\r\n      assert(state === 'writable' || state === 'erroring');\r\n\r\n      DequeueValue(controller);\r\n\r\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\r\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\r\n        WritableStreamUpdateBackpressure(stream, backpressure);\r\n      }\r\n\r\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\r\n    },\r\n    reason => {\r\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\r\n    }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n}\r\n\r\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\r\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\r\n  return desiredSize <= 0;\r\n}\r\n\r\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\r\n\r\nfunction WritableStreamDefaultControllerError(controller, error) {\r\n  const stream = controller._controlledWritableStream;\r\n\r\n  assert(stream._state === 'writable');\r\n\r\n  WritableStreamStartErroring(stream, error);\r\n}\r\n\r\n// Helper functions for the WritableStream.\r\n\r\nfunction streamBrandCheckException(name) {\r\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\r\n}\r\n\r\n// Helper functions for the WritableStreamDefaultWriter.\r\n\r\nfunction defaultWriterBrandCheckException(name) {\r\n  return new TypeError(\r\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\r\n}\r\n\r\nfunction defaultWriterLockException(name) {\r\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\r\n}\r\n\r\nfunction defaultWriterClosedPromiseInitialize(writer) {\r\n  writer._closedPromise = new Promise((resolve, reject) => {\r\n    writer._closedPromise_resolve = resolve;\r\n    writer._closedPromise_reject = reject;\r\n    writer._closedPromiseState = 'pending';\r\n  });\r\n}\r\n\r\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\r\n  writer._closedPromise = Promise.reject(reason);\r\n  writer._closedPromise_resolve = undefined;\r\n  writer._closedPromise_reject = undefined;\r\n  writer._closedPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\r\n  writer._closedPromise = Promise.resolve(undefined);\r\n  writer._closedPromise_resolve = undefined;\r\n  writer._closedPromise_reject = undefined;\r\n  writer._closedPromiseState = 'resolved';\r\n}\r\n\r\nfunction defaultWriterClosedPromiseReject(writer, reason) {\r\n  assert(writer._closedPromise_resolve !== undefined);\r\n  assert(writer._closedPromise_reject !== undefined);\r\n  assert(writer._closedPromiseState === 'pending');\r\n\r\n  writer._closedPromise_reject(reason);\r\n  writer._closedPromise_resolve = undefined;\r\n  writer._closedPromise_reject = undefined;\r\n  writer._closedPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\r\n  assert(writer._closedPromise_resolve === undefined);\r\n  assert(writer._closedPromise_reject === undefined);\r\n  assert(writer._closedPromiseState !== 'pending');\r\n\r\n  writer._closedPromise = Promise.reject(reason);\r\n  writer._closedPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterClosedPromiseResolve(writer) {\r\n  assert(writer._closedPromise_resolve !== undefined);\r\n  assert(writer._closedPromise_reject !== undefined);\r\n  assert(writer._closedPromiseState === 'pending');\r\n\r\n  writer._closedPromise_resolve(undefined);\r\n  writer._closedPromise_resolve = undefined;\r\n  writer._closedPromise_reject = undefined;\r\n  writer._closedPromiseState = 'resolved';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseInitialize(writer) {\r\n  verbose('defaultWriterReadyPromiseInitialize()');\r\n  writer._readyPromise = new Promise((resolve, reject) => {\r\n    writer._readyPromise_resolve = resolve;\r\n    writer._readyPromise_reject = reject;\r\n  });\r\n  writer._readyPromiseState = 'pending';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\r\n  verbose('defaultWriterReadyPromiseInitializeAsRejected(writer, %o)', reason);\r\n  writer._readyPromise = Promise.reject(reason);\r\n  writer._readyPromise_resolve = undefined;\r\n  writer._readyPromise_reject = undefined;\r\n  writer._readyPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\r\n  verbose('defaultWriterReadyPromiseInitializeAsResolved()');\r\n  writer._readyPromise = Promise.resolve(undefined);\r\n  writer._readyPromise_resolve = undefined;\r\n  writer._readyPromise_reject = undefined;\r\n  writer._readyPromiseState = 'fulfilled';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseReject(writer, reason) {\r\n  verbose('defaultWriterReadyPromiseReject(writer, %o)', reason);\r\n  assert(writer._readyPromise_resolve !== undefined);\r\n  assert(writer._readyPromise_reject !== undefined);\r\n\r\n  writer._readyPromise_reject(reason);\r\n  writer._readyPromise_resolve = undefined;\r\n  writer._readyPromise_reject = undefined;\r\n  writer._readyPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseReset(writer) {\r\n  verbose('defaultWriterReadyPromiseReset()');\r\n  assert(writer._readyPromise_resolve === undefined);\r\n  assert(writer._readyPromise_reject === undefined);\r\n\r\n  writer._readyPromise = new Promise((resolve, reject) => {\r\n    writer._readyPromise_resolve = resolve;\r\n    writer._readyPromise_reject = reject;\r\n  });\r\n  writer._readyPromiseState = 'pending';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\r\n  verbose('defaultWriterReadyPromiseResetToRejected(writer, %o)', reason);\r\n  assert(writer._readyPromise_resolve === undefined);\r\n  assert(writer._readyPromise_reject === undefined);\r\n\r\n  writer._readyPromise = Promise.reject(reason);\r\n  writer._readyPromiseState = 'rejected';\r\n}\r\n\r\nfunction defaultWriterReadyPromiseResolve(writer) {\r\n  verbose('defaultWriterReadyPromiseResolve()');\r\n  assert(writer._readyPromise_resolve !== undefined);\r\n  assert(writer._readyPromise_reject !== undefined);\r\n\r\n  writer._readyPromise_resolve(undefined);\r\n  writer._readyPromise_resolve = undefined;\r\n  writer._readyPromise_reject = undefined;\r\n  writer._readyPromiseState = 'fulfilled';\r\n}\r\n","'use strict';\r\nconst assert = require('better-assert');\r\nconst { ArrayBufferCopy, CreateAlgorithmFromUnderlyingMethod, CreateIterResultObject, IsFiniteNonNegativeNumber,\r\n        InvokeOrNoop, IsDetachedBuffer, TransferArrayBuffer, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\r\n        MakeSizeAlgorithmFromSizeFunction, createArrayFromList, typeIsObject } = require('./helpers.js');\r\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\r\nconst { DequeueValue, EnqueueValueWithSize, ResetQueue } = require('./queue-with-sizes.js');\r\nconst { AcquireWritableStreamDefaultWriter, IsWritableStream, IsWritableStreamLocked,\r\n        WritableStreamAbort, WritableStreamDefaultWriterCloseWithErrorPropagation,\r\n        WritableStreamDefaultWriterRelease, WritableStreamDefaultWriterWrite, WritableStreamCloseQueuedOrInFlight } =\r\n      require('./writable-stream.js');\r\n\r\nconst CancelSteps = Symbol('[[CancelSteps]]');\r\nconst PullSteps = Symbol('[[PullSteps]]');\r\n\r\nclass ReadableStream {\r\n  constructor(underlyingSource = {}, { size, highWaterMark } = {}) {\r\n    InitializeReadableStream(this);\r\n    const type = underlyingSource.type;\r\n    const typeString = String(type);\r\n    if (typeString === 'bytes') {\r\n      if (highWaterMark === undefined) {\r\n        highWaterMark = 0;\r\n      }\r\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\r\n\r\n      if (size !== undefined) {\r\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\r\n      }\r\n\r\n      SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\r\n    } else if (type === undefined) {\r\n      if (highWaterMark === undefined) {\r\n        highWaterMark = 1;\r\n      }\r\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\r\n\r\n      const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\r\n\r\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\r\n    } else {\r\n      throw new RangeError('Invalid type is specified');\r\n    }\r\n  }\r\n\r\n  get locked() {\r\n    if (IsReadableStream(this) === false) {\r\n      throw streamBrandCheckException('locked');\r\n    }\r\n\r\n    return IsReadableStreamLocked(this);\r\n  }\r\n\r\n  cancel(reason) {\r\n    if (IsReadableStream(this) === false) {\r\n      return Promise.reject(streamBrandCheckException('cancel'));\r\n    }\r\n\r\n    if (IsReadableStreamLocked(this) === true) {\r\n      return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\r\n    }\r\n\r\n    return ReadableStreamCancel(this, reason);\r\n  }\r\n\r\n  getReader({ mode } = {}) {\r\n    if (IsReadableStream(this) === false) {\r\n      throw streamBrandCheckException('getReader');\r\n    }\r\n\r\n    if (mode === undefined) {\r\n      return AcquireReadableStreamDefaultReader(this);\r\n    }\r\n\r\n    mode = String(mode);\r\n\r\n    if (mode === 'byob') {\r\n      return AcquireReadableStreamBYOBReader(this);\r\n    }\r\n\r\n    throw new RangeError('Invalid mode is specified');\r\n  }\r\n\r\n  pipeThrough({ writable, readable }, options) {\r\n    if (writable === undefined || readable === undefined) {\r\n      throw new TypeError('readable and writable arguments must be defined');\r\n    }\r\n\r\n    const promise = this.pipeTo(writable, options);\r\n\r\n    ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\r\n\r\n    return readable;\r\n  }\r\n\r\n  pipeTo(dest, { preventClose, preventAbort, preventCancel } = {}) {\r\n    if (IsReadableStream(this) === false) {\r\n      return Promise.reject(streamBrandCheckException('pipeTo'));\r\n    }\r\n    if (IsWritableStream(dest) === false) {\r\n      return Promise.reject(\r\n        new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\r\n    }\r\n\r\n    preventClose = Boolean(preventClose);\r\n    preventAbort = Boolean(preventAbort);\r\n    preventCancel = Boolean(preventCancel);\r\n\r\n    if (IsReadableStreamLocked(this) === true) {\r\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\r\n    }\r\n    if (IsWritableStreamLocked(dest) === true) {\r\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\r\n    }\r\n\r\n    const reader = AcquireReadableStreamDefaultReader(this);\r\n    const writer = AcquireWritableStreamDefaultWriter(dest);\r\n\r\n    let shuttingDown = false;\r\n\r\n    // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\r\n    let currentWrite = Promise.resolve();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Using reader and writer, read all chunks from this and write them to dest\r\n      // - Backpressure must be enforced\r\n      // - Shutdown must stop all activity\r\n      function pipeLoop() {\r\n        if (shuttingDown === true) {\r\n          return Promise.resolve();\r\n        }\r\n\r\n        return writer._readyPromise.then(() => {\r\n          return ReadableStreamDefaultReaderRead(reader).then(({ value, done }) => {\r\n            if (done === true) {\r\n              return;\r\n            }\r\n\r\n            currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(() => {});\r\n          });\r\n        })\r\n        .then(pipeLoop);\r\n      }\r\n\r\n      // Errors must be propagated forward\r\n      isOrBecomesErrored(this, reader._closedPromise, storedError => {\r\n        if (preventAbort === false) {\r\n          shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\r\n        } else {\r\n          shutdown(true, storedError);\r\n        }\r\n      });\r\n\r\n      // Errors must be propagated backward\r\n      isOrBecomesErrored(dest, writer._closedPromise, storedError => {\r\n        if (preventCancel === false) {\r\n          shutdownWithAction(() => ReadableStreamCancel(this, storedError), true, storedError);\r\n        } else {\r\n          shutdown(true, storedError);\r\n        }\r\n      });\r\n\r\n      // Closing must be propagated forward\r\n      isOrBecomesClosed(this, reader._closedPromise, () => {\r\n        if (preventClose === false) {\r\n          shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\r\n        } else {\r\n          shutdown();\r\n        }\r\n      });\r\n\r\n      // Closing must be propagated backward\r\n      if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\r\n        const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\r\n\r\n        if (preventCancel === false) {\r\n          shutdownWithAction(() => ReadableStreamCancel(this, destClosed), true, destClosed);\r\n        } else {\r\n          shutdown(true, destClosed);\r\n        }\r\n      }\r\n\r\n      pipeLoop().catch(err => {\r\n        currentWrite = Promise.resolve();\r\n        rethrowAssertionErrorRejection(err);\r\n      });\r\n\r\n      function waitForWritesToFinish() {\r\n        // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\r\n        // for that too.\r\n        const oldCurrentWrite = currentWrite;\r\n        return currentWrite.then(() => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\r\n      }\r\n\r\n      function isOrBecomesErrored(stream, promise, action) {\r\n        if (stream._state === 'errored') {\r\n          action(stream._storedError);\r\n        } else {\r\n          promise.catch(action).catch(rethrowAssertionErrorRejection);\r\n        }\r\n      }\r\n\r\n      function isOrBecomesClosed(stream, promise, action) {\r\n        if (stream._state === 'closed') {\r\n          action();\r\n        } else {\r\n          promise.then(action).catch(rethrowAssertionErrorRejection);\r\n        }\r\n      }\r\n\r\n      function shutdownWithAction(action, originalIsError, originalError) {\r\n        if (shuttingDown === true) {\r\n          return;\r\n        }\r\n        shuttingDown = true;\r\n\r\n        if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\r\n          waitForWritesToFinish().then(doTheRest);\r\n        } else {\r\n          doTheRest();\r\n        }\r\n\r\n        function doTheRest() {\r\n          action().then(\r\n            () => finalize(originalIsError, originalError),\r\n            newError => finalize(true, newError)\r\n          )\r\n          .catch(rethrowAssertionErrorRejection);\r\n        }\r\n      }\r\n\r\n      function shutdown(isError, error) {\r\n        if (shuttingDown === true) {\r\n          return;\r\n        }\r\n        shuttingDown = true;\r\n\r\n        if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\r\n          waitForWritesToFinish().then(() => finalize(isError, error)).catch(rethrowAssertionErrorRejection);\r\n        } else {\r\n          finalize(isError, error);\r\n        }\r\n      }\r\n\r\n      function finalize(isError, error) {\r\n        WritableStreamDefaultWriterRelease(writer);\r\n        ReadableStreamReaderGenericRelease(reader);\r\n\r\n        if (isError) {\r\n          reject(error);\r\n        } else {\r\n          resolve(undefined);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  tee() {\r\n    if (IsReadableStream(this) === false) {\r\n      throw streamBrandCheckException('tee');\r\n    }\r\n\r\n    const branches = ReadableStreamTee(this, false);\r\n    return createArrayFromList(branches);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  CreateReadableByteStream,\r\n  CreateReadableStream,\r\n  ReadableStream,\r\n  IsReadableStreamDisturbed,\r\n  ReadableStreamDefaultControllerClose,\r\n  ReadableStreamDefaultControllerEnqueue,\r\n  ReadableStreamDefaultControllerError,\r\n  ReadableStreamDefaultControllerGetDesiredSize,\r\n  ReadableStreamDefaultControllerHasBackpressure,\r\n  ReadableStreamDefaultControllerCanCloseOrEnqueue\r\n};\r\n\r\n// Abstract operations for the ReadableStream.\r\n\r\nfunction AcquireReadableStreamBYOBReader(stream) {\r\n  return new ReadableStreamBYOBReader(stream);\r\n}\r\n\r\nfunction AcquireReadableStreamDefaultReader(stream) {\r\n  return new ReadableStreamDefaultReader(stream);\r\n}\r\n\r\n// Throws if and only if startAlgorithm throws.\r\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1,\r\n                              sizeAlgorithm = () => 1) {\r\n  assert(IsNonNegativeNumber(highWaterMark) === true);\r\n\r\n  const stream = Object.create(ReadableStream.prototype);\r\n  InitializeReadableStream(stream);\r\n\r\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\r\n\r\n  SetUpReadableStreamDefaultController(\r\n      stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\r\n  );\r\n\r\n  return stream;\r\n}\r\n\r\n// Throws if and only if startAlgorithm throws.\r\nfunction CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 0,\r\n                                  autoAllocateChunkSize = undefined) {\r\n  assert(IsNonNegativeNumber(highWaterMark) === true);\r\n  if (autoAllocateChunkSize !== undefined) {\r\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\r\n    assert(autoAllocateChunkSize > 0);\r\n  }\r\n\r\n  const stream = Object.create(ReadableStream.prototype);\r\n  InitializeReadableStream(stream);\r\n\r\n  const controller = Object.create(ReadableByteStreamController.prototype);\r\n\r\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\r\n                                    autoAllocateChunkSize);\r\n\r\n  return stream;\r\n}\r\n\r\nfunction InitializeReadableStream(stream) {\r\n  stream._state = 'readable';\r\n  stream._reader = undefined;\r\n  stream._storedError = undefined;\r\n  stream._disturbed = false;\r\n}\r\n\r\nfunction IsReadableStream(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction IsReadableStreamDisturbed(stream) {\r\n  assert(IsReadableStream(stream) === true);\r\n\r\n  return stream._disturbed;\r\n}\r\n\r\nfunction IsReadableStreamLocked(stream) {\r\n  assert(IsReadableStream(stream) === true);\r\n\r\n  if (stream._reader === undefined) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableStreamTee(stream, cloneForBranch2) {\r\n  assert(IsReadableStream(stream) === true);\r\n  assert(typeof cloneForBranch2 === 'boolean');\r\n\r\n  const reader = AcquireReadableStreamDefaultReader(stream);\r\n\r\n  let closedOrErrored = false;\r\n  let canceled1 = false;\r\n  let canceled2 = false;\r\n  let reason1;\r\n  let reason2;\r\n  let branch1;\r\n  let branch2;\r\n\r\n  let resolveCancelPromise;\r\n  const cancelPromise = new Promise(resolve => {\r\n    resolveCancelPromise = resolve;\r\n  });\r\n\r\n  function pullAlgorithm() {\r\n    return ReadableStreamDefaultReaderRead(reader).then(result => {\r\n      assert(typeIsObject(result));\r\n      const value = result.value;\r\n      const done = result.done;\r\n      assert(typeof done === 'boolean');\r\n\r\n      if (done === true && closedOrErrored === false) {\r\n        if (canceled1 === false) {\r\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController);\r\n        }\r\n        if (canceled2 === false) {\r\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController);\r\n        }\r\n        closedOrErrored = true;\r\n      }\r\n\r\n      if (closedOrErrored === true) {\r\n        return;\r\n      }\r\n\r\n      const value1 = value;\r\n      const value2 = value;\r\n\r\n      // There is no way to access the cloning code right now in the reference implementation.\r\n      // If we add one then we'll need an implementation for serializable objects.\r\n      // if (canceled2 === false && cloneForBranch2 === true) {\r\n      //   value2 = StructuredDeserialize(StructuredSerialize(value2));\r\n      // }\r\n\r\n      if (canceled1 === false) {\r\n        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\r\n      }\r\n\r\n      if (canceled2 === false) {\r\n        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\r\n      }\r\n    });\r\n  }\r\n\r\n  function cancel1Algorithm(reason) {\r\n    canceled1 = true;\r\n    reason1 = reason;\r\n    if (canceled2 === true) {\r\n      const compositeReason = createArrayFromList([reason1, reason2]);\r\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\r\n      resolveCancelPromise(cancelResult);\r\n    }\r\n    return cancelPromise;\r\n  }\r\n\r\n  function cancel2Algorithm(reason) {\r\n    canceled2 = true;\r\n    reason2 = reason;\r\n    if (canceled1 === true) {\r\n      const compositeReason = createArrayFromList([reason1, reason2]);\r\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\r\n      resolveCancelPromise(cancelResult);\r\n    }\r\n    return cancelPromise;\r\n  }\r\n\r\n  function startAlgorithm() {}\r\n\r\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\r\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\r\n\r\n  reader._closedPromise.catch(r => {\r\n    if (closedOrErrored === true) {\r\n      return;\r\n    }\r\n\r\n    ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\r\n    ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\r\n    closedOrErrored = true;\r\n  });\r\n\r\n  return [branch1, branch2];\r\n}\r\n\r\n// ReadableStream API exposed for controllers.\r\n\r\nfunction ReadableStreamAddReadIntoRequest(stream) {\r\n  assert(IsReadableStreamBYOBReader(stream._reader) === true);\r\n  assert(stream._state === 'readable' || stream._state === 'closed');\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    const readIntoRequest = {\r\n      _resolve: resolve,\r\n      _reject: reject\r\n    };\r\n\r\n    stream._reader._readIntoRequests.push(readIntoRequest);\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nfunction ReadableStreamAddReadRequest(stream) {\r\n  assert(IsReadableStreamDefaultReader(stream._reader) === true);\r\n  assert(stream._state === 'readable');\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    const readRequest = {\r\n      _resolve: resolve,\r\n      _reject: reject\r\n    };\r\n\r\n    stream._reader._readRequests.push(readRequest);\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nfunction ReadableStreamCancel(stream, reason) {\r\n  stream._disturbed = true;\r\n\r\n  if (stream._state === 'closed') {\r\n    return Promise.resolve(undefined);\r\n  }\r\n  if (stream._state === 'errored') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n\r\n  ReadableStreamClose(stream);\r\n\r\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\r\n  return sourceCancelPromise.then(() => undefined);\r\n}\r\n\r\nfunction ReadableStreamClose(stream) {\r\n  assert(stream._state === 'readable');\r\n\r\n  stream._state = 'closed';\r\n\r\n  const reader = stream._reader;\r\n\r\n  if (reader === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (IsReadableStreamDefaultReader(reader) === true) {\r\n    for (const { _resolve } of reader._readRequests) {\r\n      _resolve(CreateIterResultObject(undefined, true));\r\n    }\r\n    reader._readRequests = [];\r\n  }\r\n\r\n  defaultReaderClosedPromiseResolve(reader);\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction ReadableStreamError(stream, e) {\r\n  assert(IsReadableStream(stream) === true);\r\n  assert(stream._state === 'readable');\r\n\r\n  stream._state = 'errored';\r\n  stream._storedError = e;\r\n\r\n  const reader = stream._reader;\r\n\r\n  if (reader === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (IsReadableStreamDefaultReader(reader) === true) {\r\n    for (const readRequest of reader._readRequests) {\r\n      readRequest._reject(e);\r\n    }\r\n\r\n    reader._readRequests = [];\r\n  } else {\r\n    assert(IsReadableStreamBYOBReader(reader));\r\n\r\n    for (const readIntoRequest of reader._readIntoRequests) {\r\n      readIntoRequest._reject(e);\r\n    }\r\n\r\n    reader._readIntoRequests = [];\r\n  }\r\n\r\n  defaultReaderClosedPromiseReject(reader, e);\r\n  reader._closedPromise.catch(() => {});\r\n}\r\n\r\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\r\n  const reader = stream._reader;\r\n\r\n  assert(reader._readIntoRequests.length > 0);\r\n\r\n  const readIntoRequest = reader._readIntoRequests.shift();\r\n  readIntoRequest._resolve(CreateIterResultObject(chunk, done));\r\n}\r\n\r\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\r\n  const reader = stream._reader;\r\n\r\n  assert(reader._readRequests.length > 0);\r\n\r\n  const readRequest = reader._readRequests.shift();\r\n  readRequest._resolve(CreateIterResultObject(chunk, done));\r\n}\r\n\r\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\r\n  return stream._reader._readIntoRequests.length;\r\n}\r\n\r\nfunction ReadableStreamGetNumReadRequests(stream) {\r\n  return stream._reader._readRequests.length;\r\n}\r\n\r\nfunction ReadableStreamHasBYOBReader(stream) {\r\n  const reader = stream._reader;\r\n\r\n  if (reader === undefined) {\r\n    return false;\r\n  }\r\n\r\n  if (IsReadableStreamBYOBReader(reader) === false) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableStreamHasDefaultReader(stream) {\r\n  const reader = stream._reader;\r\n\r\n  if (reader === undefined) {\r\n    return false;\r\n  }\r\n\r\n  if (IsReadableStreamDefaultReader(reader) === false) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Readers\r\n\r\nclass ReadableStreamDefaultReader {\r\n  constructor(stream) {\r\n    if (IsReadableStream(stream) === false) {\r\n      throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\r\n    }\r\n    if (IsReadableStreamLocked(stream) === true) {\r\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\r\n    }\r\n\r\n    ReadableStreamReaderGenericInitialize(this, stream);\r\n\r\n    this._readRequests = [];\r\n  }\r\n\r\n  get closed() {\r\n    if (IsReadableStreamDefaultReader(this) === false) {\r\n      return Promise.reject(defaultReaderBrandCheckException('closed'));\r\n    }\r\n\r\n    return this._closedPromise;\r\n  }\r\n\r\n  cancel(reason) {\r\n    if (IsReadableStreamDefaultReader(this) === false) {\r\n      return Promise.reject(defaultReaderBrandCheckException('cancel'));\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return Promise.reject(readerLockException('cancel'));\r\n    }\r\n\r\n    return ReadableStreamReaderGenericCancel(this, reason);\r\n  }\r\n\r\n  read() {\r\n    if (IsReadableStreamDefaultReader(this) === false) {\r\n      return Promise.reject(defaultReaderBrandCheckException('read'));\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return Promise.reject(readerLockException('read from'));\r\n    }\r\n\r\n    return ReadableStreamDefaultReaderRead(this);\r\n  }\r\n\r\n  releaseLock() {\r\n    if (IsReadableStreamDefaultReader(this) === false) {\r\n      throw defaultReaderBrandCheckException('releaseLock');\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this._readRequests.length > 0) {\r\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\r\n    }\r\n\r\n    ReadableStreamReaderGenericRelease(this);\r\n  }\r\n}\r\n\r\nclass ReadableStreamBYOBReader {\r\n  constructor(stream) {\r\n    if (!IsReadableStream(stream)) {\r\n      throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' +\r\n          'byte source');\r\n    }\r\n    if (IsReadableByteStreamController(stream._readableStreamController) === false) {\r\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\r\n          'source');\r\n    }\r\n    if (IsReadableStreamLocked(stream)) {\r\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\r\n    }\r\n\r\n    ReadableStreamReaderGenericInitialize(this, stream);\r\n\r\n    this._readIntoRequests = [];\r\n  }\r\n\r\n  get closed() {\r\n    if (!IsReadableStreamBYOBReader(this)) {\r\n      return Promise.reject(byobReaderBrandCheckException('closed'));\r\n    }\r\n\r\n    return this._closedPromise;\r\n  }\r\n\r\n  cancel(reason) {\r\n    if (!IsReadableStreamBYOBReader(this)) {\r\n      return Promise.reject(byobReaderBrandCheckException('cancel'));\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return Promise.reject(readerLockException('cancel'));\r\n    }\r\n\r\n    return ReadableStreamReaderGenericCancel(this, reason);\r\n  }\r\n\r\n  read(view) {\r\n    if (!IsReadableStreamBYOBReader(this)) {\r\n      return Promise.reject(byobReaderBrandCheckException('read'));\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return Promise.reject(readerLockException('read from'));\r\n    }\r\n\r\n    if (!ArrayBuffer.isView(view)) {\r\n      return Promise.reject(new TypeError('view must be an array buffer view'));\r\n    }\r\n\r\n    if (IsDetachedBuffer(view.buffer) === true) {\r\n      return Promise.reject(new TypeError('Cannot read into a view onto a detached ArrayBuffer'));\r\n    }\r\n\r\n    if (view.byteLength === 0) {\r\n      return Promise.reject(new TypeError('view must have non-zero byteLength'));\r\n    }\r\n\r\n    return ReadableStreamBYOBReaderRead(this, view);\r\n  }\r\n\r\n  releaseLock() {\r\n    if (!IsReadableStreamBYOBReader(this)) {\r\n      throw byobReaderBrandCheckException('releaseLock');\r\n    }\r\n\r\n    if (this._ownerReadableStream === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this._readIntoRequests.length > 0) {\r\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\r\n    }\r\n\r\n    ReadableStreamReaderGenericRelease(this);\r\n  }\r\n}\r\n\r\n// Abstract operations for the readers.\r\n\r\nfunction IsReadableStreamBYOBReader(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction IsReadableStreamDefaultReader(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\r\n  reader._ownerReadableStream = stream;\r\n  stream._reader = reader;\r\n\r\n  if (stream._state === 'readable') {\r\n    defaultReaderClosedPromiseInitialize(reader);\r\n  } else if (stream._state === 'closed') {\r\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\r\n  } else {\r\n    assert(stream._state === 'errored');\r\n\r\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\r\n    reader._closedPromise.catch(() => {});\r\n  }\r\n}\r\n\r\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\r\n// check.\r\n\r\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\r\n  const stream = reader._ownerReadableStream;\r\n  assert(stream !== undefined);\r\n  return ReadableStreamCancel(stream, reason);\r\n}\r\n\r\nfunction ReadableStreamReaderGenericRelease(reader) {\r\n  assert(reader._ownerReadableStream !== undefined);\r\n  assert(reader._ownerReadableStream._reader === reader);\r\n\r\n  if (reader._ownerReadableStream._state === 'readable') {\r\n    defaultReaderClosedPromiseReject(\r\n        reader,\r\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\r\n  } else {\r\n    defaultReaderClosedPromiseResetToRejected(\r\n        reader,\r\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\r\n  }\r\n  reader._closedPromise.catch(() => {});\r\n\r\n  reader._ownerReadableStream._reader = undefined;\r\n  reader._ownerReadableStream = undefined;\r\n}\r\n\r\nfunction ReadableStreamBYOBReaderRead(reader, view) {\r\n  const stream = reader._ownerReadableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  stream._disturbed = true;\r\n\r\n  if (stream._state === 'errored') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n\r\n  // Controllers must implement this.\r\n  return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\r\n}\r\n\r\nfunction ReadableStreamDefaultReaderRead(reader) {\r\n  const stream = reader._ownerReadableStream;\r\n\r\n  assert(stream !== undefined);\r\n\r\n  stream._disturbed = true;\r\n\r\n  if (stream._state === 'closed') {\r\n    return Promise.resolve(CreateIterResultObject(undefined, true));\r\n  }\r\n\r\n  if (stream._state === 'errored') {\r\n    return Promise.reject(stream._storedError);\r\n  }\r\n\r\n  assert(stream._state === 'readable');\r\n\r\n  return stream._readableStreamController[PullSteps]();\r\n}\r\n\r\n// Controllers\r\n\r\nclass ReadableStreamDefaultController {\r\n  constructor() {\r\n    throw new TypeError();\r\n  }\r\n\r\n  get desiredSize() {\r\n    if (IsReadableStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('desiredSize');\r\n    }\r\n\r\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\r\n  }\r\n\r\n  close() {\r\n    if (IsReadableStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('close');\r\n    }\r\n\r\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\r\n      throw new TypeError('The stream is not in a state that permits close');\r\n    }\r\n\r\n    ReadableStreamDefaultControllerClose(this);\r\n  }\r\n\r\n  enqueue(chunk) {\r\n    if (IsReadableStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('enqueue');\r\n    }\r\n\r\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\r\n      throw new TypeError('The stream is not in a state that permits enqueue');\r\n    }\r\n\r\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\r\n  }\r\n\r\n  error(e) {\r\n    if (IsReadableStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('error');\r\n    }\r\n\r\n    ReadableStreamDefaultControllerError(this, e);\r\n  }\r\n\r\n  [CancelSteps](reason) {\r\n    ResetQueue(this);\r\n    return this._cancelAlgorithm(reason);\r\n  }\r\n\r\n  [PullSteps]() {\r\n    const stream = this._controlledReadableStream;\r\n\r\n    if (this._queue.length > 0) {\r\n      const chunk = DequeueValue(this);\r\n\r\n      if (this._closeRequested === true && this._queue.length === 0) {\r\n        ReadableStreamClose(stream);\r\n      } else {\r\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\r\n      }\r\n\r\n      return Promise.resolve(CreateIterResultObject(chunk, false));\r\n    }\r\n\r\n    const pendingPromise = ReadableStreamAddReadRequest(stream);\r\n    ReadableStreamDefaultControllerCallPullIfNeeded(this);\r\n    return pendingPromise;\r\n  }\r\n}\r\n\r\n// Abstract operations for the ReadableStreamDefaultController.\r\n\r\nfunction IsReadableStreamDefaultController(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\r\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\r\n  if (shouldPull === false) {\r\n    return undefined;\r\n  }\r\n\r\n  if (controller._pulling === true) {\r\n    controller._pullAgain = true;\r\n    return undefined;\r\n  }\r\n\r\n  assert(controller._pullAgain === false);\r\n\r\n  controller._pulling = true;\r\n\r\n  const pullPromise = controller._pullAlgorithm();\r\n  pullPromise.then(\r\n    () => {\r\n      controller._pulling = false;\r\n\r\n      if (controller._pullAgain === true) {\r\n        controller._pullAgain = false;\r\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\r\n      }\r\n      return undefined;\r\n    },\r\n    e => {\r\n      ReadableStreamDefaultControllerError(controller, e);\r\n    }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\r\n  const stream = controller._controlledReadableStream;\r\n\r\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === false) {\r\n    return false;\r\n  }\r\n\r\n  if (controller._started === false) {\r\n    return false;\r\n  }\r\n\r\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\r\n    return true;\r\n  }\r\n\r\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\r\n  if (desiredSize > 0) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\r\n\r\nfunction ReadableStreamDefaultControllerClose(controller) {\r\n  const stream = controller._controlledReadableStream;\r\n\r\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\r\n\r\n  controller._closeRequested = true;\r\n\r\n  if (controller._queue.length === 0) {\r\n    ReadableStreamClose(stream);\r\n  }\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\r\n  const stream = controller._controlledReadableStream;\r\n\r\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\r\n\r\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\r\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\r\n  } else {\r\n    let chunkSize;\r\n    try {\r\n      chunkSize = controller._strategySizeAlgorithm(chunk);\r\n    } catch (chunkSizeE) {\r\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\r\n      throw chunkSizeE;\r\n    }\r\n\r\n    try {\r\n      EnqueueValueWithSize(controller, chunk, chunkSize);\r\n    } catch (enqueueE) {\r\n      ReadableStreamDefaultControllerError(controller, enqueueE);\r\n      throw enqueueE;\r\n    }\r\n  }\r\n\r\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerError(controller, e) {\r\n  const stream = controller._controlledReadableStream;\r\n\r\n  if (stream._state !== 'readable') {\r\n    return;\r\n  }\r\n\r\n  ResetQueue(controller);\r\n\r\n  ReadableStreamError(stream, e);\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\r\n  const stream = controller._controlledReadableStream;\r\n  const state = stream._state;\r\n\r\n  if (state === 'errored') {\r\n    return null;\r\n  }\r\n  if (state === 'closed') {\r\n    return 0;\r\n  }\r\n\r\n  return controller._strategyHWM - controller._queueTotalSize;\r\n}\r\n\r\n// This is used in the implementation of TransformStream.\r\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\r\n  if (ReadableStreamDefaultControllerShouldCallPull(controller) === true) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\r\n  const state = controller._controlledReadableStream._state;\r\n\r\n  if (controller._closeRequested === false && state === 'readable') {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction SetUpReadableStreamDefaultController(\r\n  stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\r\n  assert(stream._readableStreamController === undefined);\r\n\r\n  controller._controlledReadableStream = stream;\r\n\r\n  controller._queue = undefined;\r\n  controller._queueTotalSize = undefined;\r\n  ResetQueue(controller);\r\n\r\n  controller._started = false;\r\n  controller._closeRequested = false;\r\n  controller._pullAgain = false;\r\n  controller._pulling = false;\r\n\r\n  controller._strategySizeAlgorithm = sizeAlgorithm;\r\n  controller._strategyHWM = highWaterMark;\r\n\r\n  controller._pullAlgorithm = pullAlgorithm;\r\n  controller._cancelAlgorithm = cancelAlgorithm;\r\n\r\n  stream._readableStreamController = controller;\r\n\r\n  const startResult = startAlgorithm();\r\n  Promise.resolve(startResult).then(\r\n    () => {\r\n      controller._started = true;\r\n\r\n      assert(controller._pulling === false);\r\n      assert(controller._pullAgain === false);\r\n\r\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\r\n    },\r\n    r => {\r\n      ReadableStreamDefaultControllerError(controller, r);\r\n    }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n}\r\n\r\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark,\r\n                                                                  sizeAlgorithm) {\r\n  assert(underlyingSource !== undefined);\r\n\r\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\r\n\r\n  function startAlgorithm() {\r\n    return InvokeOrNoop(underlyingSource, 'start', [controller]);\r\n  }\r\n\r\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'pull', 0, [controller]);\r\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'cancel', 1, []);\r\n\r\n  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\r\n                                       highWaterMark, sizeAlgorithm);\r\n}\r\n\r\nclass ReadableStreamBYOBRequest {\r\n  constructor() {\r\n    throw new TypeError('ReadableStreamBYOBRequest cannot be used directly');\r\n  }\r\n\r\n  get view() {\r\n    if (IsReadableStreamBYOBRequest(this) === false) {\r\n      throw byobRequestBrandCheckException('view');\r\n    }\r\n\r\n    return this._view;\r\n  }\r\n\r\n  respond(bytesWritten) {\r\n    if (IsReadableStreamBYOBRequest(this) === false) {\r\n      throw byobRequestBrandCheckException('respond');\r\n    }\r\n\r\n    if (this._associatedReadableByteStreamController === undefined) {\r\n      throw new TypeError('This BYOB request has been invalidated');\r\n    }\r\n\r\n    if (IsDetachedBuffer(this._view.buffer) === true) {\r\n      throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be used as a response');\r\n    }\r\n\r\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\r\n  }\r\n\r\n  respondWithNewView(view) {\r\n    if (IsReadableStreamBYOBRequest(this) === false) {\r\n      throw byobRequestBrandCheckException('respond');\r\n    }\r\n\r\n    if (this._associatedReadableByteStreamController === undefined) {\r\n      throw new TypeError('This BYOB request has been invalidated');\r\n    }\r\n\r\n    if (!ArrayBuffer.isView(view)) {\r\n      throw new TypeError('You can only respond with array buffer views');\r\n    }\r\n\r\n    if (IsDetachedBuffer(view.buffer) === true) {\r\n      throw new TypeError('The supplied view\\'s buffer has been detached and so cannot be used as a response');\r\n    }\r\n\r\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\r\n  }\r\n}\r\n\r\nclass ReadableByteStreamController {\r\n  constructor() {\r\n    throw new TypeError('ReadableByteStreamController constructor cannot be used directly');\r\n  }\r\n\r\n  get byobRequest() {\r\n    if (IsReadableByteStreamController(this) === false) {\r\n      throw byteStreamControllerBrandCheckException('byobRequest');\r\n    }\r\n\r\n    if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\r\n      const firstDescriptor = this._pendingPullIntos[0];\r\n      const view = new Uint8Array(firstDescriptor.buffer,\r\n                                  firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\r\n                                  firstDescriptor.byteLength - firstDescriptor.bytesFilled);\r\n\r\n      const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\r\n      SetUpReadableStreamBYOBRequest(byobRequest, this, view);\r\n      this._byobRequest = byobRequest;\r\n    }\r\n\r\n    return this._byobRequest;\r\n  }\r\n\r\n  get desiredSize() {\r\n    if (IsReadableByteStreamController(this) === false) {\r\n      throw byteStreamControllerBrandCheckException('desiredSize');\r\n    }\r\n\r\n    return ReadableByteStreamControllerGetDesiredSize(this);\r\n  }\r\n\r\n  close() {\r\n    if (IsReadableByteStreamController(this) === false) {\r\n      throw byteStreamControllerBrandCheckException('close');\r\n    }\r\n\r\n    if (this._closeRequested === true) {\r\n      throw new TypeError('The stream has already been closed; do not close it again!');\r\n    }\r\n\r\n    const state = this._controlledReadableByteStream._state;\r\n    if (state !== 'readable') {\r\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\r\n    }\r\n\r\n    ReadableByteStreamControllerClose(this);\r\n  }\r\n\r\n  enqueue(chunk) {\r\n    if (IsReadableByteStreamController(this) === false) {\r\n      throw byteStreamControllerBrandCheckException('enqueue');\r\n    }\r\n\r\n    if (this._closeRequested === true) {\r\n      throw new TypeError('stream is closed or draining');\r\n    }\r\n\r\n    const state = this._controlledReadableByteStream._state;\r\n    if (state !== 'readable') {\r\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\r\n    }\r\n\r\n    if (!ArrayBuffer.isView(chunk)) {\r\n      throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\r\n    }\r\n\r\n    if (IsDetachedBuffer(chunk.buffer) === true) {\r\n      throw new TypeError('Cannot enqueue a view onto a detached ArrayBuffer');\r\n    }\r\n\r\n    ReadableByteStreamControllerEnqueue(this, chunk);\r\n  }\r\n\r\n  error(e) {\r\n    if (IsReadableByteStreamController(this) === false) {\r\n      throw byteStreamControllerBrandCheckException('error');\r\n    }\r\n\r\n    ReadableByteStreamControllerError(this, e);\r\n  }\r\n\r\n  [CancelSteps](reason) {\r\n    if (this._pendingPullIntos.length > 0) {\r\n      const firstDescriptor = this._pendingPullIntos[0];\r\n      firstDescriptor.bytesFilled = 0;\r\n    }\r\n\r\n    ResetQueue(this);\r\n\r\n    return this._cancelAlgorithm(reason);\r\n  }\r\n\r\n  [PullSteps]() {\r\n    const stream = this._controlledReadableByteStream;\r\n    assert(ReadableStreamHasDefaultReader(stream) === true);\r\n\r\n    if (this._queueTotalSize > 0) {\r\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\r\n\r\n      const entry = this._queue.shift();\r\n      this._queueTotalSize -= entry.byteLength;\r\n\r\n      ReadableByteStreamControllerHandleQueueDrain(this);\r\n\r\n      let view;\r\n      try {\r\n        view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\r\n      } catch (viewE) {\r\n        return Promise.reject(viewE);\r\n      }\r\n\r\n      return Promise.resolve(CreateIterResultObject(view, false));\r\n    }\r\n\r\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\r\n    if (autoAllocateChunkSize !== undefined) {\r\n      let buffer;\r\n      try {\r\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\r\n      } catch (bufferE) {\r\n        return Promise.reject(bufferE);\r\n      }\r\n\r\n      const pullIntoDescriptor = {\r\n        buffer,\r\n        byteOffset: 0,\r\n        byteLength: autoAllocateChunkSize,\r\n        bytesFilled: 0,\r\n        elementSize: 1,\r\n        ctor: Uint8Array,\r\n        readerType: 'default'\r\n      };\r\n\r\n      this._pendingPullIntos.push(pullIntoDescriptor);\r\n    }\r\n\r\n    const promise = ReadableStreamAddReadRequest(stream);\r\n\r\n    ReadableByteStreamControllerCallPullIfNeeded(this);\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\n// Abstract operations for the ReadableByteStreamController.\r\n\r\nfunction IsReadableByteStreamController(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction IsReadableStreamBYOBRequest(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\r\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\r\n  if (shouldPull === false) {\r\n    return undefined;\r\n  }\r\n\r\n  if (controller._pulling === true) {\r\n    controller._pullAgain = true;\r\n    return undefined;\r\n  }\r\n\r\n  assert(controller._pullAgain === false);\r\n\r\n  controller._pulling = true;\r\n\r\n  // TODO: Test controller argument\r\n  const pullPromise = controller._pullAlgorithm();\r\n  pullPromise.then(\r\n    () => {\r\n      controller._pulling = false;\r\n\r\n      if (controller._pullAgain === true) {\r\n        controller._pullAgain = false;\r\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n      }\r\n    },\r\n    e => {\r\n      ReadableByteStreamControllerError(controller, e);\r\n    }\r\n  )\r\n  .catch(rethrowAssertionErrorRejection);\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\r\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\r\n  controller._pendingPullIntos = [];\r\n}\r\n\r\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\r\n  assert(stream._state !== 'errored');\r\n\r\n  let done = false;\r\n  if (stream._state === 'closed') {\r\n    assert(pullIntoDescriptor.bytesFilled === 0);\r\n    done = true;\r\n  }\r\n\r\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\r\n  if (pullIntoDescriptor.readerType === 'default') {\r\n    ReadableStreamFulfillReadRequest(stream, filledView, done);\r\n  } else {\r\n    assert(pullIntoDescriptor.readerType === 'byob');\r\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\r\n  }\r\n}\r\n\r\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\r\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\r\n  const elementSize = pullIntoDescriptor.elementSize;\r\n\r\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\r\n  assert(bytesFilled % elementSize === 0);\r\n\r\n  return new pullIntoDescriptor.ctor(\r\n      pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\r\n}\r\n\r\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\r\n  controller._queue.push({ buffer, byteOffset, byteLength });\r\n  controller._queueTotalSize += byteLength;\r\n}\r\n\r\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\r\n  const elementSize = pullIntoDescriptor.elementSize;\r\n\r\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\r\n\r\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\r\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\r\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\r\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\r\n\r\n  let totalBytesToCopyRemaining = maxBytesToCopy;\r\n  let ready = false;\r\n  if (maxAlignedBytes > currentAlignedBytes) {\r\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\r\n    ready = true;\r\n  }\r\n\r\n  const queue = controller._queue;\r\n\r\n  while (totalBytesToCopyRemaining > 0) {\r\n    const headOfQueue = queue[0];\r\n\r\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\r\n\r\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\r\n    ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\r\n\r\n    if (headOfQueue.byteLength === bytesToCopy) {\r\n      queue.shift();\r\n    } else {\r\n      headOfQueue.byteOffset += bytesToCopy;\r\n      headOfQueue.byteLength -= bytesToCopy;\r\n    }\r\n    controller._queueTotalSize -= bytesToCopy;\r\n\r\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\r\n\r\n    totalBytesToCopyRemaining -= bytesToCopy;\r\n  }\r\n\r\n  if (ready === false) {\r\n    assert(controller._queueTotalSize === 0);\r\n    assert(pullIntoDescriptor.bytesFilled > 0);\r\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\r\n  }\r\n\r\n  return ready;\r\n}\r\n\r\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\r\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\r\n\r\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\r\n  pullIntoDescriptor.bytesFilled += size;\r\n}\r\n\r\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\r\n  assert(controller._controlledReadableByteStream._state === 'readable');\r\n\r\n  if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\r\n    ReadableStreamClose(controller._controlledReadableByteStream);\r\n  } else {\r\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n  }\r\n}\r\n\r\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\r\n  if (controller._byobRequest === undefined) {\r\n    return;\r\n  }\r\n\r\n  controller._byobRequest._associatedReadableByteStreamController = undefined;\r\n  controller._byobRequest._view = undefined;\r\n  controller._byobRequest = undefined;\r\n}\r\n\r\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\r\n  assert(controller._closeRequested === false);\r\n\r\n  while (controller._pendingPullIntos.length > 0) {\r\n    if (controller._queueTotalSize === 0) {\r\n      return;\r\n    }\r\n\r\n    const pullIntoDescriptor = controller._pendingPullIntos[0];\r\n\r\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\r\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\r\n\r\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\r\n        controller._controlledReadableByteStream,\r\n        pullIntoDescriptor\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction ReadableByteStreamControllerPullInto(controller, view) {\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  let elementSize = 1;\r\n  if (view.constructor !== DataView) {\r\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  const ctor = view.constructor;\r\n\r\n  const buffer = TransferArrayBuffer(view.buffer);\r\n  const pullIntoDescriptor = {\r\n    buffer,\r\n    byteOffset: view.byteOffset,\r\n    byteLength: view.byteLength,\r\n    bytesFilled: 0,\r\n    elementSize,\r\n    ctor,\r\n    readerType: 'byob'\r\n  };\r\n\r\n  if (controller._pendingPullIntos.length > 0) {\r\n    controller._pendingPullIntos.push(pullIntoDescriptor);\r\n\r\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\r\n    // - No change happens on desiredSize\r\n    // - The source has already been notified of that there's at least 1 pending read(view)\r\n\r\n    return ReadableStreamAddReadIntoRequest(stream);\r\n  }\r\n\r\n  if (stream._state === 'closed') {\r\n    const emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\r\n    return Promise.resolve(CreateIterResultObject(emptyView, true));\r\n  }\r\n\r\n  if (controller._queueTotalSize > 0) {\r\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\r\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\r\n\r\n      ReadableByteStreamControllerHandleQueueDrain(controller);\r\n\r\n      return Promise.resolve(CreateIterResultObject(filledView, false));\r\n    }\r\n\r\n    if (controller._closeRequested === true) {\r\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\r\n      ReadableByteStreamControllerError(controller, e);\r\n\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  controller._pendingPullIntos.push(pullIntoDescriptor);\r\n\r\n  const promise = ReadableStreamAddReadIntoRequest(stream);\r\n\r\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n\r\n  return promise;\r\n}\r\n\r\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\r\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\r\n\r\n  assert(firstDescriptor.bytesFilled === 0);\r\n\r\n  const stream = controller._controlledReadableByteStream;\r\n  if (ReadableStreamHasBYOBReader(stream) === true) {\r\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\r\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\r\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\r\n  if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\r\n    throw new RangeError('bytesWritten out of range');\r\n  }\r\n\r\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\r\n\r\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\r\n    // TODO: Figure out whether we should detach the buffer or not here.\r\n    return;\r\n  }\r\n\r\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\r\n\r\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\r\n  if (remainderSize > 0) {\r\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\r\n    const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\r\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\r\n  }\r\n\r\n  pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\r\n  pullIntoDescriptor.bytesFilled -= remainderSize;\r\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\r\n\r\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\r\n}\r\n\r\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\r\n  const firstDescriptor = controller._pendingPullIntos[0];\r\n\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  if (stream._state === 'closed') {\r\n    if (bytesWritten !== 0) {\r\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\r\n    }\r\n\r\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\r\n  } else {\r\n    assert(stream._state === 'readable');\r\n\r\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\r\n  }\r\n\r\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n}\r\n\r\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\r\n  const descriptor = controller._pendingPullIntos.shift();\r\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\r\n  return descriptor;\r\n}\r\n\r\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  if (stream._state !== 'readable') {\r\n    return false;\r\n  }\r\n\r\n  if (controller._closeRequested === true) {\r\n    return false;\r\n  }\r\n\r\n  if (controller._started === false) {\r\n    return false;\r\n  }\r\n\r\n  if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\r\n    return true;\r\n  }\r\n\r\n  if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\r\n    return true;\r\n  }\r\n\r\n  if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\r\n\r\nfunction ReadableByteStreamControllerClose(controller) {\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  assert(controller._closeRequested === false);\r\n  assert(stream._state === 'readable');\r\n\r\n  if (controller._queueTotalSize > 0) {\r\n    controller._closeRequested = true;\r\n\r\n    return;\r\n  }\r\n\r\n  if (controller._pendingPullIntos.length > 0) {\r\n    const firstPendingPullInto = controller._pendingPullIntos[0];\r\n    if (firstPendingPullInto.bytesFilled > 0) {\r\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\r\n      ReadableByteStreamControllerError(controller, e);\r\n\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  ReadableStreamClose(stream);\r\n}\r\n\r\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  assert(controller._closeRequested === false);\r\n  assert(stream._state === 'readable');\r\n\r\n  const buffer = chunk.buffer;\r\n  const byteOffset = chunk.byteOffset;\r\n  const byteLength = chunk.byteLength;\r\n  const transferredBuffer = TransferArrayBuffer(buffer);\r\n\r\n  if (ReadableStreamHasDefaultReader(stream) === true) {\r\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\r\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\r\n    } else {\r\n      assert(controller._queue.length === 0);\r\n\r\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\r\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\r\n    }\r\n  } else if (ReadableStreamHasBYOBReader(stream) === true) {\r\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\r\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\r\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\r\n  } else {\r\n    assert(IsReadableStreamLocked(stream) === false);\r\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\r\n  }\r\n\r\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n}\r\n\r\nfunction ReadableByteStreamControllerError(controller, e) {\r\n  const stream = controller._controlledReadableByteStream;\r\n\r\n  if (stream._state !== 'readable') {\r\n    return;\r\n  }\r\n\r\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\r\n\r\n  ResetQueue(controller);\r\n  ReadableStreamError(stream, e);\r\n}\r\n\r\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\r\n  const stream = controller._controlledReadableByteStream;\r\n  const state = stream._state;\r\n\r\n  if (state === 'errored') {\r\n    return null;\r\n  }\r\n  if (state === 'closed') {\r\n    return 0;\r\n  }\r\n\r\n  return controller._strategyHWM - controller._queueTotalSize;\r\n}\r\n\r\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\r\n  bytesWritten = Number(bytesWritten);\r\n  if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\r\n    throw new RangeError('bytesWritten must be a finite');\r\n  }\r\n\r\n  assert(controller._pendingPullIntos.length > 0);\r\n\r\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\r\n}\r\n\r\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\r\n  assert(controller._pendingPullIntos.length > 0);\r\n\r\n  const firstDescriptor = controller._pendingPullIntos[0];\r\n\r\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\r\n    throw new RangeError('The region specified by view does not match byobRequest');\r\n  }\r\n  if (firstDescriptor.byteLength !== view.byteLength) {\r\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\r\n  }\r\n\r\n  firstDescriptor.buffer = view.buffer;\r\n\r\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\r\n}\r\n\r\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\r\n                                           highWaterMark, autoAllocateChunkSize) {\r\n  assert(stream._readableStreamController === undefined);\r\n  if (autoAllocateChunkSize !== undefined) {\r\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\r\n    assert(autoAllocateChunkSize > 0);\r\n  }\r\n\r\n  controller._controlledReadableByteStream = stream;\r\n\r\n  controller._pullAgain = false;\r\n  controller._pulling = false;\r\n\r\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\r\n\r\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\r\n  controller._queue = controller._queueTotalSize = undefined;\r\n  ResetQueue(controller);\r\n\r\n  controller._closeRequested = false;\r\n  controller._started = false;\r\n\r\n  controller._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\r\n\r\n  controller._pullAlgorithm = pullAlgorithm;\r\n  controller._cancelAlgorithm = cancelAlgorithm;\r\n\r\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\r\n\r\n  controller._pendingPullIntos = [];\r\n\r\n  stream._readableStreamController = controller;\r\n\r\n  const startResult = startAlgorithm();\r\n  Promise.resolve(startResult).then(\r\n      () => {\r\n        controller._started = true;\r\n\r\n        assert(controller._pulling === false);\r\n        assert(controller._pullAgain === false);\r\n\r\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\r\n      },\r\n      r => {\r\n        ReadableByteStreamControllerError(controller, r);\r\n      }\r\n  )\r\n      .catch(rethrowAssertionErrorRejection);\r\n}\r\n\r\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\r\n  assert(underlyingByteSource !== undefined);\r\n\r\n  const controller = Object.create(ReadableByteStreamController.prototype);\r\n\r\n  function startAlgorithm() {\r\n    return InvokeOrNoop(underlyingByteSource, 'start', [controller]);\r\n  }\r\n\r\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'pull', 0, [controller]);\r\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'cancel', 1, []);\r\n\r\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\r\n  if (autoAllocateChunkSize !== undefined) {\r\n    if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\r\n      throw new RangeError('autoAllocateChunkSize must be a positive integer');\r\n    }\r\n  }\r\n\r\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\r\n                                    autoAllocateChunkSize);\r\n}\r\n\r\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\r\n  assert(IsReadableByteStreamController(controller) === true);\r\n  assert(typeof view === 'object');\r\n  assert(ArrayBuffer.isView(view) === true);\r\n  assert(IsDetachedBuffer(view.buffer) === false);\r\n  request._associatedReadableByteStreamController = controller;\r\n  request._view = view;\r\n}\r\n\r\n// Helper functions for the ReadableStream.\r\n\r\nfunction streamBrandCheckException(name) {\r\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\r\n}\r\n\r\n// Helper functions for the readers.\r\n\r\nfunction readerLockException(name) {\r\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\r\n}\r\n\r\n// Helper functions for the ReadableStreamDefaultReader.\r\n\r\nfunction defaultReaderBrandCheckException(name) {\r\n  return new TypeError(\r\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\r\n}\r\n\r\nfunction defaultReaderClosedPromiseInitialize(reader) {\r\n  reader._closedPromise = new Promise((resolve, reject) => {\r\n    reader._closedPromise_resolve = resolve;\r\n    reader._closedPromise_reject = reject;\r\n  });\r\n}\r\n\r\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\r\n  reader._closedPromise = Promise.reject(reason);\r\n  reader._closedPromise_resolve = undefined;\r\n  reader._closedPromise_reject = undefined;\r\n}\r\n\r\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\r\n  reader._closedPromise = Promise.resolve(undefined);\r\n  reader._closedPromise_resolve = undefined;\r\n  reader._closedPromise_reject = undefined;\r\n}\r\n\r\nfunction defaultReaderClosedPromiseReject(reader, reason) {\r\n  assert(reader._closedPromise_resolve !== undefined);\r\n  assert(reader._closedPromise_reject !== undefined);\r\n\r\n  reader._closedPromise_reject(reason);\r\n  reader._closedPromise_resolve = undefined;\r\n  reader._closedPromise_reject = undefined;\r\n}\r\n\r\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\r\n  assert(reader._closedPromise_resolve === undefined);\r\n  assert(reader._closedPromise_reject === undefined);\r\n\r\n  reader._closedPromise = Promise.reject(reason);\r\n}\r\n\r\nfunction defaultReaderClosedPromiseResolve(reader) {\r\n  assert(reader._closedPromise_resolve !== undefined);\r\n  assert(reader._closedPromise_reject !== undefined);\r\n\r\n  reader._closedPromise_resolve(undefined);\r\n  reader._closedPromise_resolve = undefined;\r\n  reader._closedPromise_reject = undefined;\r\n}\r\n\r\n// Helper functions for the ReadableStreamDefaultReader.\r\n\r\nfunction byobReaderBrandCheckException(name) {\r\n  return new TypeError(\r\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\r\n}\r\n\r\n// Helper functions for the ReadableStreamDefaultController.\r\n\r\nfunction defaultControllerBrandCheckException(name) {\r\n  return new TypeError(\r\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\r\n}\r\n\r\n// Helper functions for the ReadableStreamBYOBRequest.\r\n\r\nfunction byobRequestBrandCheckException(name) {\r\n  return new TypeError(\r\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\r\n}\r\n\r\n// Helper functions for the ReadableByteStreamController.\r\n\r\nfunction byteStreamControllerBrandCheckException(name) {\r\n  return new TypeError(\r\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\r\n}\r\n\r\n// Helper function for ReadableStream pipeThrough\r\n\r\nfunction ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\r\n  try {\r\n    // This relies on the brand-check that is enforced by Promise.prototype.then(). As with the rest of the reference\r\n    // implementation, it doesn't attempt to do the right thing if someone has modified the global environment.\r\n    Promise.prototype.then.call(promise, undefined, () => {});\r\n  } catch (e) {\r\n    // The brand check failed, therefore the internal slot is not present and there's nothing further to do.\r\n  }\r\n}\r\n","'use strict';\r\nconst { createDataProperty } = require('./helpers.js');\r\n\r\nmodule.exports = class ByteLengthQueuingStrategy {\r\n  constructor({ highWaterMark }) {\r\n    createDataProperty(this, 'highWaterMark', highWaterMark);\r\n  }\r\n\r\n  size(chunk) {\r\n    return chunk.byteLength;\r\n  }\r\n};\r\n","'use strict';\r\nconst { createDataProperty } = require('./helpers.js');\r\n\r\nmodule.exports = class CountQueuingStrategy {\r\n  constructor({ highWaterMark }) {\r\n    createDataProperty(this, 'highWaterMark', highWaterMark);\r\n  }\r\n\r\n  size() {\r\n    return 1;\r\n  }\r\n};\r\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\r\n// and do not appear in the standard text.\r\nconst verbose = require('debug')('streams:transform-stream:verbose');\r\nconst { InvokeOrNoop, CreateAlgorithmFromUnderlyingMethod, PromiseCall, typeIsObject,\r\n        ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\r\n        MakeSizeAlgorithmFromSizeFunction } = require('./helpers.js');\r\nconst { CreateReadableStream, ReadableStreamDefaultControllerClose, ReadableStreamDefaultControllerEnqueue,\r\n        ReadableStreamDefaultControllerError, ReadableStreamDefaultControllerGetDesiredSize,\r\n        ReadableStreamDefaultControllerHasBackpressure,\r\n        ReadableStreamDefaultControllerCanCloseOrEnqueue } = require('./readable-stream.js');\r\nconst { CreateWritableStream, WritableStreamDefaultControllerErrorIfNeeded } = require('./writable-stream.js');\r\n\r\n// Class TransformStream\r\n\r\nclass TransformStream {\r\n  constructor(transformer = {}, writableStrategy = {}, readableStrategy = {}) {\r\n    const readableType = transformer.readableType;\r\n\r\n    if (readableType !== undefined) {\r\n      throw new RangeError('Invalid readable type specified');\r\n    }\r\n\r\n    const writableType = transformer.writableType;\r\n\r\n    if (writableType !== undefined) {\r\n      throw new RangeError('Invalid writable type specified');\r\n    }\r\n\r\n    const writableSizeFunction = writableStrategy.size;\r\n    const writableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(writableSizeFunction);\r\n    let writableHighWaterMark = writableStrategy.highWaterMark;\r\n    if (writableHighWaterMark === undefined) {\r\n      writableHighWaterMark = 1;\r\n    }\r\n    writableHighWaterMark = ValidateAndNormalizeHighWaterMark(writableHighWaterMark);\r\n\r\n    const readableSizeFunction = readableStrategy.size;\r\n    const readableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(readableSizeFunction);\r\n    let readableHighWaterMark = readableStrategy.highWaterMark;\r\n    if (readableHighWaterMark === undefined) {\r\n      readableHighWaterMark = 0;\r\n    }\r\n    readableHighWaterMark = ValidateAndNormalizeHighWaterMark(readableHighWaterMark);\r\n\r\n    let startPromise_resolve;\r\n    const startPromise = new Promise(resolve => {\r\n      startPromise_resolve = resolve;\r\n    });\r\n\r\n    InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\r\n                              readableSizeAlgorithm);\r\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\r\n\r\n    const startResult = InvokeOrNoop(transformer, 'start', [this._transformStreamController]);\r\n    startPromise_resolve(startResult);\r\n  }\r\n\r\n  get readable() {\r\n    if (IsTransformStream(this) === false) {\r\n      throw streamBrandCheckException('readable');\r\n    }\r\n\r\n    return this._readable;\r\n  }\r\n\r\n  get writable() {\r\n    if (IsTransformStream(this) === false) {\r\n      throw streamBrandCheckException('writable');\r\n    }\r\n\r\n    return this._writable;\r\n  }\r\n}\r\n\r\n// Transform Stream Abstract Operations\r\n\r\nfunction CreateTransformStream(startAlgorithm, transformAlgorithm, flushAlgorithm, writableHighWaterMark = 1,\r\n                               writableSizeAlgorithm = () => 1, readableHighWaterMark = 0,\r\n                               readableSizeAlgorithm = () => 1) {\r\n  assert(IsNonNegativeNumber(writableHighWaterMark));\r\n  assert(IsNonNegativeNumber(readableHighWaterMark));\r\n\r\n  const stream = Object.create(TransformStream.prototype);\r\n\r\n  let startPromise_resolve;\r\n  const startPromise = new Promise(resolve => {\r\n    startPromise_resolve = resolve;\r\n  });\r\n\r\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\r\n                            readableSizeAlgorithm);\r\n\r\n  const controller = Object.create(TransformStreamDefaultController.prototype);\r\n\r\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\r\n\r\n  const startResult = startAlgorithm();\r\n  startPromise_resolve(startResult);\r\n  return stream;\r\n}\r\n\r\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm,\r\n                                   readableHighWaterMark, readableSizeAlgorithm) {\r\n  function startAlgorithm() {\r\n    return startPromise;\r\n  }\r\n\r\n  function writeAlgorithm(chunk) {\r\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\r\n  }\r\n\r\n  function abortAlgorithm(reason) {\r\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\r\n  }\r\n\r\n  function closeAlgorithm() {\r\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\r\n  }\r\n\r\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\r\n                                          writableHighWaterMark, writableSizeAlgorithm);\r\n\r\n  function pullAlgorithm() {\r\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\r\n  }\r\n\r\n  function cancelAlgorithm(reason) {\r\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\r\n                                          readableSizeAlgorithm);\r\n\r\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\r\n  stream._backpressure = undefined;\r\n  stream._backpressureChangePromise = undefined;\r\n  stream._backpressureChangePromise_resolve = undefined;\r\n  TransformStreamSetBackpressure(stream, true);\r\n\r\n  // Used by IsWritableStream() which is called by SetUpTransformStreamDefaultController().\r\n  stream._transformStreamController = undefined;\r\n}\r\n\r\nfunction IsTransformStream(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// This is a no-op if both sides are already errored.\r\nfunction TransformStreamError(stream, e) {\r\n  verbose('TransformStreamError()');\r\n\r\n  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\r\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\r\n}\r\n\r\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\r\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\r\n  if (stream._backpressure === true) {\r\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\r\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\r\n    // _backpressure is set.\r\n    TransformStreamSetBackpressure(stream, false);\r\n  }\r\n}\r\n\r\nfunction TransformStreamSetBackpressure(stream, backpressure) {\r\n  verbose(`TransformStreamSetBackpressure() [backpressure = ${backpressure}]`);\r\n\r\n  // Passes also when called during construction.\r\n  assert(stream._backpressure !== backpressure);\r\n\r\n  if (stream._backpressureChangePromise !== undefined) {\r\n    stream._backpressureChangePromise_resolve();\r\n  }\r\n\r\n  stream._backpressureChangePromise = new Promise(resolve => {\r\n    stream._backpressureChangePromise_resolve = resolve;\r\n  });\r\n\r\n  stream._backpressure = backpressure;\r\n}\r\n\r\n// Class TransformStreamDefaultController\r\n\r\nclass TransformStreamDefaultController {\r\n  constructor() {\r\n    throw new TypeError('TransformStreamDefaultController instances cannot be created directly');\r\n  }\r\n\r\n  get desiredSize() {\r\n    if (IsTransformStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('desiredSize');\r\n    }\r\n\r\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\r\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\r\n  }\r\n\r\n  enqueue(chunk) {\r\n    if (IsTransformStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('enqueue');\r\n    }\r\n\r\n    TransformStreamDefaultControllerEnqueue(this, chunk);\r\n  }\r\n\r\n  error(reason) {\r\n    if (IsTransformStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('error');\r\n    }\r\n\r\n    TransformStreamDefaultControllerError(this, reason);\r\n  }\r\n\r\n  terminate() {\r\n    if (IsTransformStreamDefaultController(this) === false) {\r\n      throw defaultControllerBrandCheckException('terminate');\r\n    }\r\n\r\n    TransformStreamDefaultControllerTerminate(this);\r\n  }\r\n}\r\n\r\n// Transform Stream Default Controller Abstract Operations\r\n\r\nfunction IsTransformStreamDefaultController(x) {\r\n  if (!typeIsObject(x)) {\r\n    return false;\r\n  }\r\n\r\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\r\n  assert(IsTransformStream(stream) === true);\r\n  assert(stream._transformStreamController === undefined);\r\n\r\n  controller._controlledTransformStream = stream;\r\n  stream._transformStreamController = controller;\r\n\r\n  controller._transformAlgorithm = transformAlgorithm;\r\n  controller._flushAlgorithm = flushAlgorithm;\r\n}\r\n\r\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\r\n  assert(transformer !== undefined);\r\n\r\n  const controller = Object.create(TransformStreamDefaultController.prototype);\r\n\r\n  let transformAlgorithm = chunk => {\r\n    try {\r\n      TransformStreamDefaultControllerEnqueue(controller, chunk);\r\n      return Promise.resolve();\r\n    } catch (transformResultE) {\r\n      return Promise.reject(transformResultE);\r\n    }\r\n  };\r\n  const transformMethod = transformer.transform;\r\n  if (transformMethod !== undefined) {\r\n    if (typeof transformMethod !== 'function') {\r\n      throw new TypeError('transform is not a method');\r\n    }\r\n    transformAlgorithm = chunk => {\r\n      const transformPromise = PromiseCall(transformMethod, transformer, [chunk, controller]);\r\n      return transformPromise.catch(e => {\r\n        TransformStreamError(stream, e);\r\n        throw e;\r\n      });\r\n    };\r\n  }\r\n\r\n  const flushAlgorithm = CreateAlgorithmFromUnderlyingMethod(transformer, 'flush', 0, [controller]);\r\n\r\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\r\n}\r\n\r\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\r\n  verbose('TransformStreamDefaultControllerEnqueue()');\r\n\r\n  const stream = controller._controlledTransformStream;\r\n  const readableController = stream._readable._readableStreamController;\r\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === false) {\r\n    throw new TypeError('Readable side is not in a state that permits enqueue');\r\n  }\r\n\r\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\r\n  // accept TransformStreamDefaultControllerEnqueue() calls.\r\n\r\n  try {\r\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\r\n  } catch (e) {\r\n    // This happens when readableStrategy.size() throws.\r\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\r\n\r\n    throw stream._readable._storedError;\r\n  }\r\n\r\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\r\n  if (backpressure !== stream._backpressure) {\r\n    assert(backpressure === true);\r\n    TransformStreamSetBackpressure(stream, true);\r\n  }\r\n}\r\n\r\nfunction TransformStreamDefaultControllerError(controller, e) {\r\n  TransformStreamError(controller._controlledTransformStream, e);\r\n}\r\n\r\nfunction TransformStreamDefaultControllerTerminate(controller) {\r\n  verbose('TransformStreamDefaultControllerTerminate()');\r\n\r\n  const stream = controller._controlledTransformStream;\r\n  const readableController = stream._readable._readableStreamController;\r\n\r\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\r\n    ReadableStreamDefaultControllerClose(readableController);\r\n  }\r\n\r\n  const error = new TypeError('TransformStream terminated');\r\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\r\n}\r\n\r\n// TransformStreamDefaultSink Algorithms\r\n\r\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\r\n  verbose('TransformStreamDefaultSinkWriteAlgorithm()');\r\n\r\n  assert(stream._writable._state === 'writable');\r\n\r\n  const controller = stream._transformStreamController;\r\n\r\n  if (stream._backpressure === true) {\r\n    const backpressureChangePromise = stream._backpressureChangePromise;\r\n    assert(backpressureChangePromise !== undefined);\r\n    return backpressureChangePromise\r\n        .then(() => {\r\n          const writable = stream._writable;\r\n          const state = writable._state;\r\n          if (state === 'erroring') {\r\n            throw writable._storedError;\r\n          }\r\n          assert(state === 'writable');\r\n          return controller._transformAlgorithm(chunk);\r\n        });\r\n  }\r\n\r\n  return controller._transformAlgorithm(chunk);\r\n}\r\n\r\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\r\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\r\n  // errored.\r\n  TransformStreamError(stream, reason);\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\r\n  verbose('TransformStreamDefaultSinkCloseAlgorithm()');\r\n\r\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\r\n  const readable = stream._readable;\r\n\r\n  const flushPromise = stream._transformStreamController._flushAlgorithm();\r\n  // Return a promise that is fulfilled with undefined on success.\r\n  return flushPromise.then(() => {\r\n    if (readable._state === 'errored') {\r\n      throw readable._storedError;\r\n    }\r\n    const readableController = readable._readableStreamController;\r\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\r\n      ReadableStreamDefaultControllerClose(readableController);\r\n    }\r\n  }).catch(r => {\r\n    TransformStreamError(stream, r);\r\n    throw readable._storedError;\r\n  });\r\n}\r\n\r\n// TransformStreamDefaultSource Algorithms\r\n\r\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\r\n  verbose('TransformStreamDefaultSourcePullAlgorithm()');\r\n\r\n  // Invariant. Enforced by the promises returned by start() and pull().\r\n  assert(stream._backpressure === true);\r\n\r\n  assert(stream._backpressureChangePromise !== undefined);\r\n\r\n  TransformStreamSetBackpressure(stream, false);\r\n\r\n  // Prevent the next pull() call until there is backpressure.\r\n  return stream._backpressureChangePromise;\r\n}\r\n\r\nmodule.exports = { CreateTransformStream, TransformStream };\r\n\r\n// Helper functions for the TransformStreamDefaultController.\r\n\r\nfunction defaultControllerBrandCheckException(name) {\r\n  return new TypeError(\r\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\r\n}\r\n\r\n// Helper functions for the TransformStream.\r\n\r\nfunction streamBrandCheckException(name) {\r\n  return new TypeError(\r\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\r\n}\r\n"],"names":["Symbol","Number.isNaN","assert","require$$0","require$$1","rethrowAssertionErrorRejection","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","CreateAlgorithmFromUnderlyingMethod","IsFiniteNonNegativeNumber","InvokeOrNoop","ValidateAndNormalizeHighWaterMark","IsNonNegativeNumber","MakeSizeAlgorithmFromSizeFunction","typeIsObject","require$$2","AcquireWritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","WritableStreamAbort","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamCloseQueuedOrInFlight","require$$3","streamBrandCheckException","Number.isInteger","createDataProperty","verbose","CreateReadableStream","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerHasBackpressure","ReadableStreamDefaultControllerCanCloseOrEnqueue","CreateWritableStream","WritableStreamDefaultControllerErrorIfNeeded","defaultControllerBrandCheckException"],"mappings":"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"}